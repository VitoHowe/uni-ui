{"version":3,"file":"debug.js","sources":["pages/debug/debug.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvZGVidWcvZGVidWcudnVl"],"sourcesContent":["<template>\r\n  <view class=\"debug-container\">\r\n    <!-- 页面标题 -->\r\n    <view class=\"debug-header\">\r\n      <text class=\"header-title\">🧪 认证系统调试</text>\r\n      <text class=\"header-desc\">用于测试和验证微信登录系统功能</text>\r\n    </view>\r\n    \r\n    <!-- 当前状态显示 -->\r\n    <view class=\"status-section\">\r\n      <uni-section title=\"当前状态\" type=\"line\" padding>\r\n        <view class=\"status-grid\">\r\n          <view class=\"status-item\">\r\n            <text class=\"status-label\">登录状态</text>\r\n            <text class=\"status-value\" :style=\"{color: authStore.isAuthenticated ? '#28a745' : '#dc3545'}\">\r\n              {{ authStore.loginStatusText }}\r\n            </text>\r\n          </view>\r\n          \r\n          <view class=\"status-item\">\r\n            <text class=\"status-label\">用户昵称</text>\r\n            <text class=\"status-value\">{{ authStore.userNickname }}</text>\r\n          </view>\r\n          \r\n          <view class=\"status-item\">\r\n            <text class=\"status-label\">用户角色</text>\r\n            <text class=\"status-value\">{{ authStore.userRoleText }}</text>\r\n          </view>\r\n          \r\n          <view class=\"status-item\">\r\n            <text class=\"status-label\">Token状态</text>\r\n            <text class=\"status-value\" :style=\"{color: authStore.tokenInfo.hasToken ? '#28a745' : '#dc3545'}\">\r\n              {{ authStore.tokenInfo.hasToken ? '有效' : '无效' }}\r\n            </text>\r\n          </view>\r\n        </view>\r\n      </uni-section>\r\n    </view>\r\n    \r\n    <!-- 测试功能 -->\r\n    <view class=\"test-section\">\r\n      <uni-section title=\"测试功能\" type=\"line\" padding>\r\n        <view class=\"test-buttons\">\r\n          <button class=\"test-btn\" @click=\"runFullTest\">\r\n            <uni-icons type=\"gear\" size=\"16\" color=\"#007AFF\" />\r\n            <text>运行完整测试</text>\r\n          </button>\r\n          \r\n          <button class=\"test-btn\" @click=\"simulateLogin\">\r\n            <uni-icons type=\"person\" size=\"16\" color=\"#28a745\" />\r\n            <text>模拟登录</text>\r\n          </button>\r\n          \r\n          <button class=\"test-btn\" @click=\"testTokenRefresh\">\r\n            <uni-icons type=\"refresh\" size=\"16\" color=\"#ffc107\" />\r\n            <text>测试Token刷新</text>\r\n          </button>\r\n          \r\n          <button class=\"test-btn\" @click=\"testNetworkRequest\">\r\n            <uni-icons type=\"cloud-upload\" size=\"16\" color=\"#17a2b8\" />\r\n            <text>测试网络请求</text>\r\n          </button>\r\n          \r\n          <button class=\"test-btn\" @click=\"testPermissions\">\r\n            <uni-icons type=\"locked\" size=\"16\" color=\"#6f42c1\" />\r\n            <text>测试权限检查</text>\r\n          </button>\r\n          \r\n          <button class=\"test-btn\" @click=\"testWechatCodeManager\">\r\n            <uni-icons type=\"weixin\" size=\"16\" color=\"#07c160\" />\r\n            <text>测试Code管理</text>\r\n          </button>\r\n          \r\n          <button class=\"test-btn\" @click=\"testLoginRetry\">\r\n            <uni-icons type=\"loop\" size=\"16\" color=\"#ff6b6b\" />\r\n            <text>测试登录重试</text>\r\n          </button>\r\n          \r\n          <button class=\"test-btn danger\" @click=\"clearTestData\">\r\n            <uni-icons type=\"trash\" size=\"16\" color=\"#dc3545\" />\r\n            <text>清空测试数据</text>\r\n          </button>\r\n        </view>\r\n      </uni-section>\r\n    </view>\r\n    \r\n    <!-- 调试信息 -->\r\n    <view class=\"debug-info\">\r\n      <uni-section title=\"调试信息\" type=\"line\" padding>\r\n        <view class=\"info-content\">\r\n          <text class=\"info-text\">API基础URL: {{ apiBaseUrl }}</text>\r\n          <text class=\"info-text\">当前页面: {{ currentPagePath }}</text>\r\n          <text class=\"info-text\">系统版本: {{ systemInfo.platform }}</text>\r\n          <text class=\"info-text\">小程序版本: {{ systemInfo.version }}</text>\r\n        </view>\r\n      </uni-section>\r\n    </view>\r\n    \r\n    <!-- 日志显示 -->\r\n    <view class=\"log-section\" v-if=\"logs.length > 0\">\r\n      <uni-section title=\"测试日志\" type=\"line\" padding>\r\n        <view class=\"log-content\">\r\n          <scroll-view scroll-y=\"true\" class=\"log-scroll\">\r\n            <view v-for=\"(log, index) in logs\" :key=\"index\" class=\"log-item\">\r\n              <text class=\"log-time\">{{ log.time }}</text>\r\n              <text class=\"log-message\" :class=\"log.type\">{{ log.message }}</text>\r\n            </view>\r\n          </scroll-view>\r\n          <button class=\"clear-log-btn\" @click=\"clearLogs\">清空日志</button>\r\n        </view>\r\n      </uni-section>\r\n    </view>\r\n    \r\n    <!-- 返回按钮 -->\r\n    <view class=\"back-section\">\r\n      <button class=\"back-btn\" @click=\"goBack\">\r\n        <uni-icons type=\"back\" size=\"16\" color=\"#666\" />\r\n        <text>返回首页</text>\r\n      </button>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useAuthStore } from '@/stores/auth.js'\r\nimport AuthTestHelper from '@/utils/testHelpers.js'\r\nimport { API_CONFIG } from '@/utils/constants.js'\r\nimport { PermissionChecker } from '@/utils/auth.js'\r\nimport { request } from '@/utils/request.js'\r\n\r\n// 状态管理\r\nconst authStore = useAuthStore()\r\n\r\n// 响应式数据\r\nconst logs = ref([])\r\nconst systemInfo = reactive({\r\n  platform: '',\r\n  version: ''\r\n})\r\n\r\n// 计算属性\r\nconst apiBaseUrl = computed(() => API_CONFIG.BASE_URL)\r\nconst currentPagePath = computed(() => {\r\n  const pages = getCurrentPages()\r\n  return pages.length > 0 ? `/${pages[pages.length - 1].route}` : '未知'\r\n})\r\n\r\n// 添加日志\r\nconst addLog = (message, type = 'info') => {\r\n  const time = new Date().toLocaleTimeString()\r\n  logs.value.unshift({\r\n    time,\r\n    message,\r\n    type\r\n  })\r\n  \r\n  // 限制日志数量\r\n  if (logs.value.length > 50) {\r\n    logs.value.pop()\r\n  }\r\n}\r\n\r\n// 运行完整测试\r\nconst runFullTest = async () => {\r\n  addLog('开始运行完整测试套件...', 'info')\r\n  \r\n  try {\r\n    await AuthTestHelper.runFullTest()\r\n    addLog('完整测试套件执行完成', 'success')\r\n  } catch (error) {\r\n    addLog(`完整测试失败: ${error.message}`, 'error')\r\n  }\r\n}\r\n\r\n// 模拟登录\r\nconst simulateLogin = async () => {\r\n  addLog('开始模拟登录测试...', 'info')\r\n  \r\n  try {\r\n    const success = await AuthTestHelper.simulateLogin()\r\n    if (success) {\r\n      addLog('模拟登录成功', 'success')\r\n    } else {\r\n      addLog('模拟登录失败', 'error')\r\n    }\r\n  } catch (error) {\r\n    addLog(`模拟登录异常: ${error.message}`, 'error')\r\n  }\r\n}\r\n\r\n// 测试Token刷新\r\nconst testTokenRefresh = async () => {\r\n  addLog('开始测试Token刷新机制...', 'info')\r\n  \r\n  try {\r\n    if (!authStore.isAuthenticated) {\r\n      addLog('请先登录后再测试Token刷新', 'warning')\r\n      return\r\n    }\r\n    \r\n    await authStore.refreshToken()\r\n    addLog('Token刷新成功', 'success')\r\n  } catch (error) {\r\n    addLog(`Token刷新失败: ${error.message}`, 'error')\r\n  }\r\n}\r\n\r\n// 测试网络请求\r\nconst testNetworkRequest = async () => {\r\n  addLog('开始测试网络请求功能...', 'info')\r\n  \r\n  try {\r\n    // 测试无需认证的请求构建\r\n    const testUrl = request.buildFullUrl('/test')\r\n    addLog(`URL构建测试: ${testUrl}`, 'info')\r\n    \r\n    // 测试请求头构建\r\n    const headers = await request.buildHeaders({}, false)\r\n    addLog(`请求头构建测试通过`, 'success')\r\n    \r\n    addLog('网络请求功能测试完成', 'success')\r\n  } catch (error) {\r\n    addLog(`网络请求测试失败: ${error.message}`, 'error')\r\n  }\r\n}\r\n\r\n// 测试权限检查\r\nconst testPermissions = () => {\r\n  addLog('开始测试权限检查功能...', 'info')\r\n  \r\n  try {\r\n    // 测试文件上传权限\r\n    const uploadPermission = PermissionChecker.checkFeatureAvailable('file_upload')\r\n    addLog(`文件上传权限: ${uploadPermission.available ? '允许' : '拒绝'} - ${uploadPermission.message}`, \r\n           uploadPermission.available ? 'success' : 'warning')\r\n    \r\n    // 测试个人资料权限\r\n    const profilePermission = PermissionChecker.checkFeatureAvailable('profile_management')\r\n    addLog(`个人资料权限: ${profilePermission.available ? '允许' : '拒绝'} - ${profilePermission.message}`, \r\n           profilePermission.available ? 'success' : 'warning')\r\n    \r\n    // 测试管理员功能权限\r\n    const adminPermission = PermissionChecker.checkFeatureAvailable('admin_functions')\r\n    addLog(`管理员功能权限: ${adminPermission.available ? '允许' : '拒绝'} - ${adminPermission.message}`, \r\n           adminPermission.available ? 'success' : 'warning')\r\n    \r\n    addLog('权限检查功能测试完成', 'success')\r\n  } catch (error) {\r\n    addLog(`权限检查测试失败: ${error.message}`, 'error')\r\n  }\r\n}\r\n\r\n// 测试微信Code管理\r\nconst testWechatCodeManager = async () => {\r\n  addLog('开始测试微信Code管理机制...', 'info')\r\n  \r\n  try {\r\n    const success = await AuthTestHelper.testWechatCodeManager()\r\n    if (success) {\r\n      addLog('微信Code管理机制测试通过', 'success')\r\n    } else {\r\n      addLog('微信Code管理机制测试失败', 'error')\r\n    }\r\n  } catch (error) {\r\n    addLog(`微信Code管理测试异常: ${error.message}`, 'error')\r\n  }\r\n}\r\n\r\n// 测试登录重试机制\r\nconst testLoginRetry = async () => {\r\n  addLog('开始测试登录重试机制...', 'info')\r\n  \r\n  try {\r\n    const success = await AuthTestHelper.testLoginRetryMechanism()\r\n    if (success) {\r\n      addLog('登录重试机制测试通过', 'success')\r\n    } else {\r\n      addLog('登录重试机制测试失败', 'error')\r\n    }\r\n  } catch (error) {\r\n    addLog(`登录重试测试异常: ${error.message}`, 'error')\r\n  }\r\n}\r\n\r\n// 清空测试数据\r\nconst clearTestData = () => {\r\n  uni.showModal({\r\n    title: '确认清空',\r\n    content: '确定要清空所有测试数据吗？这将清除登录状态和用户信息。',\r\n    success: (res) => {\r\n      if (res.confirm) {\r\n        AuthTestHelper.clearTestData()\r\n        addLog('测试数据已清空', 'info')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 清空日志\r\nconst clearLogs = () => {\r\n  logs.value = []\r\n  uni.showToast({\r\n    title: '日志已清空',\r\n    icon: 'success'\r\n  })\r\n}\r\n\r\n// 返回首页\r\nconst goBack = () => {\r\n  uni.reLaunch({\r\n    url: '/pages/index/index'\r\n  })\r\n}\r\n\r\n// 获取系统信息\r\nconst getSystemInfo = () => {\r\n  uni.getSystemInfo({\r\n    success: (res) => {\r\n      systemInfo.platform = res.platform || '未知'\r\n      systemInfo.version = res.version || '未知'\r\n    }\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  addLog('认证系统调试页面加载完成', 'info')\r\n  getSystemInfo()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.debug-container {\r\n  padding: 20rpx;\r\n  background-color: #f8f9fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.debug-header {\r\n  text-align: center;\r\n  margin-bottom: 30rpx;\r\n  padding: 30rpx;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 20rpx;\r\n  color: white;\r\n  \r\n  .header-title {\r\n    display: block;\r\n    font-size: 36rpx;\r\n    font-weight: 600;\r\n    margin-bottom: 15rpx;\r\n  }\r\n  \r\n  .header-desc {\r\n    font-size: 26rpx;\r\n    opacity: 0.9;\r\n  }\r\n}\r\n\r\n.status-section,\r\n.test-section,\r\n.debug-info,\r\n.log-section {\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.status-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 20rpx;\r\n  background: white;\r\n  padding: 30rpx;\r\n  border-radius: 16rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.status-item {\r\n  text-align: center;\r\n  \r\n  .status-label {\r\n    display: block;\r\n    font-size: 24rpx;\r\n    color: #666;\r\n    margin-bottom: 10rpx;\r\n  }\r\n  \r\n  .status-value {\r\n    display: block;\r\n    font-size: 28rpx;\r\n    font-weight: 600;\r\n    color: #333;\r\n  }\r\n}\r\n\r\n.test-buttons {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 20rpx;\r\n  background: white;\r\n  padding: 30rpx;\r\n  border-radius: 16rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n  \r\n  // 响应式调整 - 当按钮较多时使用单列布局\r\n  @media screen and (max-width: 750rpx) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n.test-btn {\r\n  height: 80rpx;\r\n  background: #f8f9fa;\r\n  color: #333;\r\n  border: 2rpx solid #e0e0e0;\r\n  border-radius: 12rpx;\r\n  font-size: 26rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10rpx;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:active {\r\n    background: #e9ecef;\r\n    transform: scale(0.95);\r\n  }\r\n  \r\n  &.danger {\r\n    border-color: #dc3545;\r\n    color: #dc3545;\r\n    \r\n    &:active {\r\n      background: #f5c6cb;\r\n    }\r\n  }\r\n}\r\n\r\n.info-content {\r\n  background: white;\r\n  padding: 30rpx;\r\n  border-radius: 16rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n  \r\n  .info-text {\r\n    display: block;\r\n    font-size: 26rpx;\r\n    color: #666;\r\n    margin-bottom: 15rpx;\r\n    line-height: 1.5;\r\n    \r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.log-content {\r\n  background: white;\r\n  border-radius: 16rpx;\r\n  overflow: hidden;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.log-scroll {\r\n  height: 400rpx;\r\n  padding: 20rpx;\r\n}\r\n\r\n.log-item {\r\n  margin-bottom: 20rpx;\r\n  padding-bottom: 20rpx;\r\n  border-bottom: 1rpx solid #f0f0f0;\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n    border-bottom: none;\r\n  }\r\n  \r\n  .log-time {\r\n    display: block;\r\n    font-size: 22rpx;\r\n    color: #999;\r\n    margin-bottom: 8rpx;\r\n  }\r\n  \r\n  .log-message {\r\n    display: block;\r\n    font-size: 26rpx;\r\n    line-height: 1.4;\r\n    \r\n    &.info {\r\n      color: #333;\r\n    }\r\n    \r\n    &.success {\r\n      color: #28a745;\r\n    }\r\n    \r\n    &.warning {\r\n      color: #ffc107;\r\n    }\r\n    \r\n    &.error {\r\n      color: #dc3545;\r\n    }\r\n  }\r\n}\r\n\r\n.clear-log-btn {\r\n  width: 100%;\r\n  height: 60rpx;\r\n  background: #f8f9fa;\r\n  color: #666;\r\n  border: none;\r\n  border-top: 1rpx solid #e0e0e0;\r\n  font-size: 24rpx;\r\n  \r\n  &:active {\r\n    background: #e9ecef;\r\n  }\r\n}\r\n\r\n.back-section {\r\n  text-align: center;\r\n  margin-top: 50rpx;\r\n}\r\n\r\n.back-btn {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 10rpx;\r\n  height: 70rpx;\r\n  padding: 0 40rpx;\r\n  background: white;\r\n  color: #666;\r\n  border: 2rpx solid #e0e0e0;\r\n  border-radius: 35rpx;\r\n  font-size: 28rpx;\r\n  \r\n  &:active {\r\n    background: #f5f5f5;\r\n  }\r\n}\r\n</style>\r\n","import MiniProgramPage from 'E:/开源项目/uni-ui/pages/debug/debug.vue'\nwx.createPage(MiniProgramPage)"],"names":["useAuthStore","ref","reactive","computed","API_CONFIG","AuthTestHelper","request","PermissionChecker","uni","onMounted"],"mappings":"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"}
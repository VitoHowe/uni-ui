{"version":3,"file":"exam-list.js","sources":["pages/exam-list/exam-list.vue","../../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvZXhhbS1saXN0L2V4YW0tbGlzdC52dWU"],"sourcesContent":["<template>\r\n  <view class=\"exam-list-container\">\r\n    <!-- 顶部搜索栏 -->\r\n    <view class=\"search-section\">\r\n      <view class=\"search-box\">\r\n        <uni-icons type=\"search\" size=\"18\" color=\"#999\" />\r\n        <input \r\n          class=\"search-input\" \r\n          placeholder=\"搜索题库名称或文件名\" \r\n          v-model=\"searchKeyword\"\r\n          @input=\"handleSearch\"\r\n        />\r\n        <uni-icons \r\n          v-if=\"searchKeyword\" \r\n          type=\"clear\" \r\n          size=\"16\" \r\n          color=\"#999\" \r\n          @click=\"clearSearch\"\r\n        />\r\n      </view>\r\n      <view class=\"filter-btn\" @click=\"showFilterPopup\">\r\n        <uni-icons type=\"funnel\" size=\"18\" color=\"#333\" />\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 数据统计卡片 -->\r\n    <view class=\"stats-overview\">\r\n      <view class=\"stat-card\">\r\n        <text class=\"stat-number\">{{ totalBanks }}</text>\r\n        <text class=\"stat-label\">题库总数</text>\r\n      </view>\r\n      <view class=\"stat-card\">\r\n        <text class=\"stat-number\">{{ totalQuestions }}</text>\r\n        <text class=\"stat-label\">题目总数</text>\r\n      </view>\r\n      <view class=\"stat-card\">\r\n        <text class=\"stat-number\">{{ todayAdded }}</text>\r\n        <text class=\"stat-label\">今日新增</text>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 题库列表 -->\r\n    <view class=\"bank-list\">\r\n      <!-- 加载状态 -->\r\n      <view v-if=\"loading\" class=\"loading-state\">\r\n        <uni-icons type=\"spinner-cycle\" size=\"40\" color=\"#007AFF\" class=\"loading-icon\" />\r\n        <text class=\"loading-text\">正在加载题库...</text>\r\n      </view>\r\n\r\n      <!-- 空状态 -->\r\n      <view v-else-if=\"filteredBankList.length === 0\" class=\"empty-state\">\r\n        <uni-icons type=\"folder-add\" size=\"80\" color=\"#ddd\" />\r\n        <text class=\"empty-title\">暂无题库</text>\r\n        <text class=\"empty-desc\">上传文件创建你的第一个题库吧</text>\r\n        <button class=\"upload-btn\" @click=\"goToUpload\">\r\n          <uni-icons type=\"plus\" size=\"16\" color=\"#fff\" />\r\n          <text>上传题库</text>\r\n        </button>\r\n      </view>\r\n\r\n      <!-- 题库卡片列表 -->\r\n      <view v-else class=\"bank-cards\">\r\n        <view \r\n          class=\"bank-card\" \r\n          v-for=\"bank in filteredBankList\" \r\n          :key=\"bank.id\"\r\n          @click=\"startExam(bank)\"\r\n        >\r\n          <!-- 卡片头部 -->\r\n          <view class=\"card-header\">\r\n            <view class=\"bank-icon\">\r\n              <uni-icons type=\"paperplane\" size=\"24\" color=\"#fff\" />\r\n            </view>\r\n            <view class=\"bank-info\">\r\n              <text class=\"bank-name\">{{ bank.bank_name }}</text>\r\n              <text class=\"file-name\">{{ bank.file_name }}</text>\r\n            </view>\r\n            <view class=\"more-btn\" @click.stop=\"showMoreActions(bank)\">\r\n              <uni-icons type=\"more-filled\" size=\"20\" color=\"#999\" />\r\n            </view>\r\n          </view>\r\n\r\n          <!-- 卡片内容 -->\r\n          <view class=\"card-content\">\r\n            <view class=\"content-item\">\r\n              <uni-icons type=\"compose\" size=\"16\" color=\"#666\" />\r\n              <text class=\"item-text\">{{ bank.total_questions }} 道题目</text>\r\n            </view>\r\n            <view class=\"content-item\">\r\n              <uni-icons type=\"calendar\" size=\"16\" color=\"#666\" />\r\n              <text class=\"item-text\">{{ formatDate(bank.created_at) }}</text>\r\n            </view>\r\n          </view>\r\n\r\n          <!-- 题目类型分布 -->\r\n          <view class=\"card-tags\">\r\n            <view \r\n              class=\"tag\" \r\n              v-for=\"(type, index) in getQuestionTypes(bank)\" \r\n              :key=\"index\"\r\n              :class=\"'tag-' + type.type\"\r\n            >\r\n              <text class=\"tag-text\">{{ type.label }}×{{ type.count }}</text>\r\n            </view>\r\n          </view>\r\n\r\n          <!-- 学习进度显示 -->\r\n          <view class=\"progress-section\">\r\n            <view class=\"progress-info\">\r\n              <text class=\"progress-label\">学习进度</text>\r\n              <text class=\"progress-value\">{{ bank.progress || 0 }}%</text>\r\n            </view>\r\n            <view class=\"progress-bar-wrapper\">\r\n              <view class=\"progress-bar-bg\">\r\n                <view class=\"progress-bar-fill\" :style=\"{width: (bank.progress || 0) + '%'}\"></view>\r\n              </view>\r\n              <text class=\"progress-text\">{{ getProgressText(bank) }}</text>\r\n            </view>\r\n            <view v-if=\"bank.completed_count > 0\" class=\"completed-info\">\r\n              <text class=\"completed-text\">✓ 已完成 {{ bank.completed_count }} 题</text>\r\n            </view>\r\n          </view>\r\n\r\n          <!-- 卡片底部操作 -->\r\n          <view class=\"card-footer\">\r\n            <view class=\"footer-btn primary\" @click.stop=\"startExam(bank)\">\r\n              <uni-icons type=\"forward\" size=\"16\" color=\"#fff\" />\r\n              <text class=\"btn-text\">{{ (bank.completed_count > 0) ? '继续学习' : '开始练习' }}</text>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 筛选弹窗 -->\r\n    <uni-popup ref=\"filterPopup\" type=\"bottom\">\r\n      <view class=\"filter-content\">\r\n        <view class=\"filter-header\">\r\n          <text class=\"filter-title\">筛选条件</text>\r\n          <text class=\"filter-reset\" @click=\"resetFilter\">重置</text>\r\n        </view>\r\n        \r\n        <view class=\"filter-section\">\r\n          <text class=\"section-title\">排序方式</text>\r\n          <view class=\"filter-options\">\r\n            <view \r\n              class=\"option-item\" \r\n              v-for=\"sort in sortOptions\" \r\n              :key=\"sort.value\"\r\n              :class=\"{active: currentSort === sort.value}\"\r\n              @click=\"selectSort(sort.value)\"\r\n            >\r\n              <text class=\"option-text\">{{ sort.label }}</text>\r\n              <uni-icons v-if=\"currentSort === sort.value\" type=\"checkmarkempty\" size=\"18\" color=\"#007AFF\" />\r\n            </view>\r\n          </view>\r\n        </view>\r\n\r\n        <button class=\"confirm-btn\" @click=\"applyFilter\">确认</button>\r\n      </view>\r\n    </uni-popup>\r\n\r\n    <!-- 更多操作弹窗 -->\r\n    <uni-popup ref=\"actionPopup\" type=\"bottom\">\r\n      <view class=\"action-content\">\r\n        <view class=\"action-item\" @click=\"shareBank\">\r\n          <uni-icons type=\"redo\" size=\"20\" color=\"#333\" />\r\n          <text class=\"action-text\">分享题库</text>\r\n        </view>\r\n        <view \r\n          v-if=\"selectedBank && selectedBank.completed_count > 0\" \r\n          class=\"action-item danger\" \r\n          @click=\"resetBankProgress\"\r\n        >\r\n          <uni-icons type=\"refreshempty\" size=\"20\" color=\"#ff9500\" />\r\n          <text class=\"action-text warning\">重置学习进度</text>\r\n        </view>\r\n        <view class=\"action-item cancel\" @click=\"closeActionPopup\">\r\n          <text class=\"action-text\">取消</text>\r\n        </view>\r\n      </view>\r\n    </uni-popup>\r\n\r\n    <!-- 练习模式选择弹窗 -->\r\n    <uni-popup ref=\"modePopup\" type=\"center\">\r\n      <view class=\"mode-popup\">\r\n        <view class=\"popup-header\">\r\n          <text class=\"popup-title\">选择练习模式</text>\r\n          <view class=\"close-btn\" @click=\"modePopup.close()\">\r\n            <uni-icons type=\"closeempty\" size=\"20\" color=\"#999\" />\r\n          </view>\r\n        </view>\r\n        \r\n        <view class=\"mode-options\">\r\n          <view class=\"mode-card\" @click=\"startChapterPractice\">\r\n            <uni-icons type=\"list\" size=\"40\" color=\"#667eea\" />\r\n            <text class=\"mode-title\">章节练习</text>\r\n            <text class=\"mode-desc\">选择特定章节进行练习</text>\r\n          </view>\r\n          \r\n          <view class=\"mode-card\" @click=\"startFullPractice\">\r\n            <uni-icons type=\"paperplane\" size=\"40\" color=\"#f5576c\" />\r\n            <text class=\"mode-title\">整卷练习</text>\r\n            <text class=\"mode-desc\">按顺序练习所有章节</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </uni-popup>\r\n\r\n    <!-- 章节选择弹窗 -->\r\n    <uni-popup ref=\"chapterSelectPopup\" type=\"bottom\">\r\n      <view class=\"chapter-select-content\">\r\n        <view class=\"popup-header\">\r\n          <text class=\"popup-title\">选择章节</text>\r\n          <view class=\"close-btn\" @click=\"chapterSelectPopup.close()\">\r\n            <uni-icons type=\"closeempty\" size=\"20\" color=\"#999\" />\r\n          </view>\r\n        </view>\r\n        \r\n        <scroll-view class=\"chapter-list\" scroll-y>\r\n          <view \r\n            v-for=\"chapter in selectedBank?.chapters\" \r\n            :key=\"chapter.id\"\r\n            class=\"chapter-item\"\r\n            @click=\"selectChapterAndStart(chapter)\"\r\n          >\r\n            <view class=\"chapter-info\">\r\n              <text class=\"chapter-name\">{{ chapter.chapter_name }}</text>\r\n              <text class=\"chapter-count\">{{ chapter.question_count }} 题</text>\r\n            </view>\r\n            \r\n            <view class=\"chapter-progress\">\r\n              <text class=\"progress-percent\">{{ getChapterProgressText(chapter) }}</text>\r\n              <uni-icons type=\"forward\" size=\"16\" color=\"#999\" />\r\n            </view>\r\n          </view>\r\n        </scroll-view>\r\n      </view>\r\n    </uni-popup>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed } from 'vue'\r\nimport { onShow } from '@dcloudio/uni-app'\r\nimport { get, del } from '@/utils/request.js'\r\n\r\n// 搜索关键词\r\nconst searchKeyword = ref('')\r\n\r\n// 加载状态\r\nconst loading = ref(false)\r\n\r\n// 题库列表\r\nconst bankList = ref([])\r\n\r\n// 当前选中的题库\r\nconst selectedBank = ref(null)\r\n\r\n// 排序选项\r\nconst sortOptions = [\r\n  { label: '最新创建', value: 'created_desc' },\r\n  { label: '最早创建', value: 'created_asc' },\r\n  { label: '题目最多', value: 'questions_desc' },\r\n  { label: '题目最少', value: 'questions_asc' }\r\n]\r\n\r\n// 当前排序\r\nconst currentSort = ref('created_desc')\r\n\r\n// 弹窗引用\r\nconst filterPopup = ref(null)\r\nconst actionPopup = ref(null)\r\nconst modePopup = ref(null)\r\nconst chapterSelectPopup = ref(null)\r\n\r\n// 统计数据\r\nconst totalBanks = computed(() => bankList.value.length)\r\nconst totalQuestions = computed(() => {\r\n  return bankList.value.reduce((sum, bank) => sum + bank.total_questions, 0)\r\n})\r\nconst todayAdded = computed(() => {\r\n  const today = new Date().toDateString()\r\n  return bankList.value.filter(bank => {\r\n    const bankDate = new Date(bank.created_at).toDateString()\r\n    return bankDate === today\r\n  }).length\r\n})\r\n\r\n// 过滤后的题库列表\r\nconst filteredBankList = computed(() => {\r\n  let list = [...bankList.value]\r\n  \r\n  // 搜索过滤\r\n  if (searchKeyword.value) {\r\n    const keyword = searchKeyword.value.toLowerCase()\r\n    list = list.filter(bank => \r\n      bank.bank_name.toLowerCase().includes(keyword) ||\r\n      bank.file_name.toLowerCase().includes(keyword)\r\n    )\r\n  }\r\n  \r\n  // 排序\r\n  list.sort((a, b) => {\r\n    switch (currentSort.value) {\r\n      case 'created_desc':\r\n        return new Date(b.created_at) - new Date(a.created_at)\r\n      case 'created_asc':\r\n        return new Date(a.created_at) - new Date(b.created_at)\r\n      case 'questions_desc':\r\n        return b.total_questions - a.total_questions\r\n      case 'questions_asc':\r\n        return a.total_questions - b.total_questions\r\n      default:\r\n        return 0\r\n    }\r\n  })\r\n  \r\n  return list\r\n})\r\n\r\n// 页面显示时刷新题库列表（包括首次加载和从答题页返回）\r\nonShow(() => {\r\n  console.log('📱 题库列表页面显示，刷新数据...')\r\n  fetchBankList()\r\n})\r\n\r\n// 获取题库列表\r\nconst fetchBankList = async () => {\r\n  loading.value = true\r\n  try {\r\n    // 1. 获取题库列表（使用优化后的API，包含study_progress）\r\n    const response = await get('/questions/banks')\r\n    const banks = response.banks || []\r\n    \r\n    // 映射字段名称并使用study_progress字段\r\n    bankList.value = banks.map(bank => {\r\n      const studyProgress = bank.study_progress || {}\r\n      \r\n      return {\r\n        id: bank.id,\r\n        bank_id: bank.id, // 向后兼容\r\n        bank_name: bank.name,\r\n        file_name: bank.file_original_name,\r\n        total_questions: bank.question_count,\r\n        created_at: bank.created_at,\r\n        description: bank.description,\r\n        creator_name: bank.creator_name,\r\n        file_type: bank.file_type,\r\n        file_size: bank.file_size,\r\n        \r\n        // 使用后端返回的study_progress字段\r\n        totalChapters: studyProgress.total_chapters || 0,\r\n        studiedChapters: studyProgress.studied_chapters || 0,\r\n        progress: studyProgress.progress_percentage || 0,\r\n        completed_count: studyProgress.completed_questions || 0,\r\n        last_study_time: studyProgress.last_study_time || null,\r\n        \r\n        // 章节信息和详细进度将在需要时按需加载\r\n        chapters: [],\r\n        chapterProgress: null, // 标记为未加载\r\n        current_chapter_id: null,\r\n        current_question_number: 0\r\n      }\r\n    })\r\n    \r\n    console.log('✅ 题库列表加载完成，已使用study_progress优化接口调用')\r\n  } catch (error) {\r\n    console.error('获取题库列表失败:', error)\r\n    uni.showToast({\r\n      title: error.message || '加载失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取题目类型统计\r\nconst getQuestionTypes = (bank) => {\r\n  if (!bank.questions || bank.questions.length === 0) {\r\n    return []\r\n  }\r\n  \r\n  const typeMap = {\r\n    'single': { label: '单选', count: 0, type: 'single' },\r\n    'multiple': { label: '多选', count: 0, type: 'multiple' },\r\n    'judge': { label: '判断', count: 0, type: 'judge' },\r\n    'fill': { label: '填空', count: 0, type: 'fill' }\r\n  }\r\n  \r\n  bank.questions.forEach(q => {\r\n    if (typeMap[q.type]) {\r\n      typeMap[q.type].count++\r\n    }\r\n  })\r\n  \r\n  return Object.values(typeMap).filter(type => type.count > 0)\r\n}\r\n\r\n// 格式化日期\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString)\r\n  const now = new Date()\r\n  const diff = now - date\r\n  \r\n  const minutes = Math.floor(diff / 60000)\r\n  const hours = Math.floor(diff / 3600000)\r\n  const days = Math.floor(diff / 86400000)\r\n  \r\n  if (minutes < 1) return '刚刚'\r\n  if (minutes < 60) return `${minutes}分钟前`\r\n  if (hours < 24) return `${hours}小时前`\r\n  if (days < 7) return `${days}天前`\r\n  \r\n  return `${date.getMonth() + 1}月${date.getDate()}日`\r\n}\r\n\r\n// 搜索处理\r\nconst handleSearch = () => {\r\n  // 搜索逻辑已在 computed 中处理\r\n}\r\n\r\n// 清空搜索\r\nconst clearSearch = () => {\r\n  searchKeyword.value = ''\r\n}\r\n\r\n// 显示筛选弹窗\r\nconst showFilterPopup = () => {\r\n  filterPopup.value.open()\r\n}\r\n\r\n// 选择排序\r\nconst selectSort = (value) => {\r\n  currentSort.value = value\r\n}\r\n\r\n// 重置筛选\r\nconst resetFilter = () => {\r\n  currentSort.value = 'created_desc'\r\n}\r\n\r\n// 应用筛选\r\nconst applyFilter = () => {\r\n  filterPopup.value.close()\r\n}\r\n\r\n// 获取进度显示文本\r\nconst getProgressText = (bank) => {\r\n  if (!bank.last_study_time || bank.completed_count === 0) {\r\n    return '尚未开始'\r\n  }\r\n  \r\n  return `已学习 ${bank.studiedChapters}/${bank.totalChapters} 章节`\r\n}\r\n\r\n// 开始考试 - 显示模式选择（按需加载章节列表）\r\nconst startExam = async (bank) => {\r\n  selectedBank.value = bank\r\n  \r\n  // 如果尚未加载章节列表，则加载\r\n  if (!bank.chapters || bank.chapters.length === 0) {\r\n    try {\r\n      uni.showLoading({ title: '加载章节信息...' })\r\n      const chaptersData = await get(`/question-banks/${bank.id}/chapters`)\r\n      bank.chapters = chaptersData.chapters || []\r\n      uni.hideLoading()\r\n      \r\n      if (bank.chapters.length === 0) {\r\n        uni.showToast({\r\n          title: '该题库暂无章节',\r\n          icon: 'none'\r\n        })\r\n        return\r\n      }\r\n    } catch (error) {\r\n      uni.hideLoading()\r\n      console.error(`获取题库${bank.id}章节失败:`, error)\r\n      uni.showToast({\r\n        title: '加载章节失败',\r\n        icon: 'none'\r\n      })\r\n      return\r\n    }\r\n  }\r\n  \r\n  modePopup.value.open()\r\n}\r\n\r\n// 开始章节练习（按需加载章节进度）\r\nconst startChapterPractice = async () => {\r\n  modePopup.value.close()\r\n  \r\n  const bank = selectedBank.value\r\n  \r\n  // 如果尚未加载章节进度，则加载\r\n  if (bank.chapterProgress === null) {\r\n    try {\r\n      uni.showLoading({ title: '加载章节进度...' })\r\n      const progressData = await get(`/user-progress/${bank.id}/chapters`)\r\n      bank.chapterProgress = progressData || []\r\n      uni.hideLoading()\r\n    } catch (error) {\r\n      uni.hideLoading()\r\n      console.error(`获取题库${bank.id}章节进度失败:`, error)\r\n      bank.chapterProgress = []\r\n    }\r\n  }\r\n  \r\n  chapterSelectPopup.value.open()\r\n}\r\n\r\n// 开始整卷练习（查询整卷练习进度）\r\nconst startFullPractice = async () => {\r\n  modePopup.value.close()\r\n  \r\n  const bank = selectedBank.value\r\n  let startChapterId = bank.chapters[0]?.id\r\n  let startQuestionNumber = 1\r\n  \r\n  try {\r\n    // 查询整卷练习进度\r\n    uni.showLoading({ title: '加载进度...' })\r\n    const fullProgress = await get(`/user-progress/${bank.id}/full`)\r\n    uni.hideLoading()\r\n    \r\n    // 如果有整卷练习进度，询问是否继续\r\n    if (fullProgress && fullProgress.current_question_number > 0) {\r\n      const chapterName = getChapterName(bank, fullProgress.current_chapter_id)\r\n      \r\n      uni.showModal({\r\n        title: '继续练习',\r\n        content: `上次学习到「${chapterName}」第${fullProgress.current_question_number}题\\n整体进度：${Math.round((fullProgress.completed_count / bank.total_questions) * 100)}%\\n\\n是否继续？`,\r\n        confirmText: '继续',\r\n        cancelText: '从头开始',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            startChapterId = fullProgress.current_chapter_id\r\n            startQuestionNumber = fullProgress.current_question_number\r\n          }\r\n          navigateToExam('full', startChapterId, startQuestionNumber)\r\n        }\r\n      })\r\n      return\r\n    }\r\n  } catch (error) {\r\n    uni.hideLoading()\r\n    console.error(`获取整卷练习进度失败:`, error)\r\n    // 如果接口返回404或其他错误，说明没有进度，继续从头开始\r\n  }\r\n  \r\n  // 没有整卷练习进度，直接从第一章开始\r\n  navigateToExam('full', startChapterId, startQuestionNumber)\r\n}\r\n\r\n// 选择章节后开始\r\nconst selectChapterAndStart = (chapter) => {\r\n  chapterSelectPopup.value.close()\r\n  \r\n  const bank = selectedBank.value\r\n  const chapterProgress = bank.chapterProgress?.find(cp => cp.chapter_id === chapter.id)\r\n  \r\n  let startQuestionNumber = 1\r\n  \r\n  if (chapterProgress && chapterProgress.current_question_number > 0) {\r\n    uni.showModal({\r\n      title: '继续练习',\r\n      content: `「${chapter.chapter_name}」\\n\\n上次学习到第${chapterProgress.current_question_number}题\\n进度：${chapterProgress.progress_percentage}%\\n\\n是否继续？`,\r\n      confirmText: '继续',\r\n      cancelText: '从头开始',\r\n      success: (res) => {\r\n        if (res.confirm) {\r\n          startQuestionNumber = chapterProgress.current_question_number\r\n        }\r\n        navigateToExam('chapter', chapter.id, startQuestionNumber)\r\n      }\r\n    })\r\n  } else {\r\n    navigateToExam('chapter', chapter.id, startQuestionNumber)\r\n  }\r\n}\r\n\r\n// 跳转到答题页\r\nconst navigateToExam = (mode, chapterId, questionNumber = 1) => {\r\n  const bank = selectedBank.value\r\n  uni.navigateTo({\r\n    url: `/pages/exam/exam?bankId=${bank.id}&mode=${mode}&chapterId=${chapterId}&questionNumber=${questionNumber}`\r\n  })\r\n}\r\n\r\n// 获取章节名称\r\nconst getChapterName = (bank, chapterId) => {\r\n  const chapter = bank.chapters?.find(c => c.id === chapterId)\r\n  return chapter ? chapter.chapter_name : ''\r\n}\r\n\r\n// 获取章节进度文本\r\nconst getChapterProgressText = (chapter) => {\r\n  if (!selectedBank.value) return '未开始'\r\n  \r\n  const progress = selectedBank.value.chapterProgress?.find(cp => cp.chapter_id === chapter.id)\r\n  \r\n  if (!progress || progress.current_question_number === 0) {\r\n    return '未开始'\r\n  }\r\n  \r\n  return `${progress.progress_percentage}%`\r\n}\r\n\r\n// 显示更多操作\r\nconst showMoreActions = (bank) => {\r\n  selectedBank.value = bank\r\n  actionPopup.value.open()\r\n}\r\n\r\n// 关闭操作弹窗\r\nconst closeActionPopup = () => {\r\n  actionPopup.value.close()\r\n}\r\n\r\n// 分享题库\r\nconst shareBank = () => {\r\n  actionPopup.value.close()\r\n  uni.showToast({\r\n    title: '分享功能开发中',\r\n    icon: 'none'\r\n  })\r\n}\r\n\r\n// 重置题库学习进度\r\nconst resetBankProgress = () => {\r\n  if (!selectedBank.value) return\r\n  \r\n  const bank = selectedBank.value\r\n  actionPopup.value.close()\r\n  \r\n  uni.showModal({\r\n    title: '重置学习进度',\r\n    content: `确定要重置「${bank.bank_name}」的所有章节学习进度吗？\\n\\n当前整体进度：${bank.progress}%\\n已完成：${bank.completed_count} 题\\n\\n重置后将从第一题重新开始，此操作不可恢复。`,\r\n    confirmText: '重置',\r\n    confirmColor: '#ff9500',\r\n    cancelText: '取消',\r\n    success: async (res) => {\r\n      if (res.confirm) {\r\n        try {\r\n          uni.showLoading({ title: '重置中...' })\r\n          \r\n          // 删除该题库所有章节的进度\r\n          await del(`/user-progress/${bank.id}`)\r\n          \r\n          // 刷新列表\r\n          await fetchBankList()\r\n          \r\n          uni.hideLoading()\r\n          uni.showToast({\r\n            title: '重置成功',\r\n            icon: 'success',\r\n            duration: 2000\r\n          })\r\n          \r\n          console.log(`🔄 题库 ${bank.bank_name} 学习进度已重置`)\r\n        } catch (error) {\r\n          uni.hideLoading()\r\n          console.error('重置进度失败:', error)\r\n          uni.showToast({\r\n            title: error.message || '重置失败',\r\n            icon: 'none',\r\n            duration: 2000\r\n          })\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 跳转到上传页面\r\nconst goToUpload = () => {\r\n  uni.navigateTo({\r\n    url: '/pages/upload/upload'\r\n  })\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.exam-list-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(180deg, #f5f7fa 0%, #ffffff 100%);\r\n  padding-bottom: 40rpx;\r\n}\r\n\r\n/* 搜索栏 */\r\n.search-section {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20rpx;\r\n  background: white;\r\n  gap: 16rpx;\r\n}\r\n\r\n.search-box {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  background: #f5f7fa;\r\n  border-radius: 50rpx;\r\n  padding: 16rpx 24rpx;\r\n  gap: 12rpx;\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.filter-btn {\r\n  width: 72rpx;\r\n  height: 72rpx;\r\n  background: #f5f7fa;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* 统计卡片 */\r\n.stats-overview {\r\n  display: flex;\r\n  gap: 16rpx;\r\n  padding: 20rpx;\r\n}\r\n\r\n.stat-card {\r\n  flex: 1;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  padding: 32rpx 20rpx;\r\n  border-radius: 16rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-shadow: 0 8rpx 24rpx rgba(102, 126, 234, 0.25);\r\n}\r\n\r\n.stat-card:nth-child(2) {\r\n  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\r\n}\r\n\r\n.stat-card:nth-child(3) {\r\n  background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\r\n}\r\n\r\n.stat-number {\r\n  font-size: 48rpx;\r\n  font-weight: bold;\r\n  color: white;\r\n  margin-bottom: 8rpx;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 24rpx;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n/* 题库列表 */\r\n.bank-list {\r\n  padding: 0 20rpx;\r\n}\r\n\r\n/* 加载状态 */\r\n.loading-state {\r\n  padding: 120rpx 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 24rpx;\r\n}\r\n\r\n.loading-icon {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.loading-text {\r\n  font-size: 28rpx;\r\n  color: #999;\r\n}\r\n\r\n/* 空状态 */\r\n.empty-state {\r\n  padding: 120rpx 40rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.empty-title {\r\n  font-size: 32rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-top: 32rpx;\r\n  margin-bottom: 16rpx;\r\n}\r\n\r\n.empty-desc {\r\n  font-size: 26rpx;\r\n  color: #999;\r\n  margin-bottom: 48rpx;\r\n}\r\n\r\n.upload-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8rpx;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  border: none;\r\n  padding: 24rpx 48rpx;\r\n  border-radius: 50rpx;\r\n  font-size: 28rpx;\r\n}\r\n\r\n/* 题库卡片 */\r\n.bank-cards {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24rpx;\r\n}\r\n\r\n.bank-card {\r\n  background: white;\r\n  border-radius: 20rpx;\r\n  padding: 32rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.06);\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.bank-card:active {\r\n  transform: scale(0.98);\r\n}\r\n\r\n/* 卡片头部 */\r\n.card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 24rpx;\r\n}\r\n\r\n.bank-icon {\r\n  width: 80rpx;\r\n  height: 80rpx;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 16rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20rpx;\r\n}\r\n\r\n.bank-info {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8rpx;\r\n}\r\n\r\n.bank-name {\r\n  font-size: 32rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.file-name {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n}\r\n\r\n.more-btn {\r\n  padding: 8rpx;\r\n}\r\n\r\n/* 卡片内容 */\r\n.card-content {\r\n  display: flex;\r\n  gap: 32rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.content-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8rpx;\r\n}\r\n\r\n.item-text {\r\n  font-size: 26rpx;\r\n  color: #666;\r\n}\r\n\r\n/* 标签 */\r\n.card-tags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 12rpx;\r\n  margin-bottom: 24rpx;\r\n}\r\n\r\n.tag {\r\n  padding: 8rpx 16rpx;\r\n  border-radius: 8rpx;\r\n  background: #f0f0f0;\r\n}\r\n\r\n.tag-single {\r\n  background: #e3f2fd;\r\n}\r\n\r\n.tag-multiple {\r\n  background: #fff3e0;\r\n}\r\n\r\n.tag-judge {\r\n  background: #e8f5e9;\r\n}\r\n\r\n.tag-fill {\r\n  background: #fce4ec;\r\n}\r\n\r\n.tag-text {\r\n  font-size: 22rpx;\r\n  color: #666;\r\n}\r\n\r\n/* 学习进度区域 */\r\n.progress-section {\r\n  padding: 24rpx 0;\r\n  border-top: 1rpx solid #f0f0f0;\r\n  margin-top: 20rpx;\r\n}\r\n\r\n.progress-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 12rpx;\r\n}\r\n\r\n.progress-label {\r\n  font-size: 26rpx;\r\n  color: #666;\r\n}\r\n\r\n.progress-value {\r\n  font-size: 28rpx;\r\n  font-weight: 600;\r\n  color: #667eea;\r\n}\r\n\r\n.progress-bar-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16rpx;\r\n}\r\n\r\n.progress-bar-bg {\r\n  flex: 1;\r\n  height: 12rpx;\r\n  background: #f0f0f0;\r\n  border-radius: 6rpx;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar-fill {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 6rpx;\r\n  transition: width 0.3s ease;\r\n  min-width: 2%;\r\n}\r\n\r\n.progress-text {\r\n  font-size: 22rpx;\r\n  color: #999;\r\n  white-space: nowrap;\r\n}\r\n\r\n.completed-info {\r\n  margin-top: 8rpx;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.completed-text {\r\n  font-size: 22rpx;\r\n  color: #28a745;\r\n}\r\n\r\n/* 卡片底部 */\r\n.card-footer {\r\n  display: flex;\r\n  gap: 16rpx;\r\n  margin-top: 20rpx;\r\n}\r\n\r\n.footer-btn {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8rpx;\r\n  padding: 24rpx;\r\n  border-radius: 12rpx;\r\n  background: white;\r\n}\r\n\r\n.footer-btn.primary {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border: none;\r\n}\r\n\r\n.footer-btn .btn-text {\r\n  font-size: 28rpx;\r\n  color: white;\r\n}\r\n\r\n/* 筛选弹窗 */\r\n.filter-content {\r\n  background: white;\r\n  border-radius: 32rpx 32rpx 0 0;\r\n  padding: 40rpx 32rpx;\r\n  padding-bottom: calc(40rpx + env(safe-area-inset-bottom));\r\n}\r\n\r\n.filter-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 32rpx;\r\n}\r\n\r\n.filter-title {\r\n  font-size: 32rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.filter-reset {\r\n  font-size: 28rpx;\r\n  color: #007AFF;\r\n}\r\n\r\n.filter-section {\r\n  margin-bottom: 32rpx;\r\n}\r\n\r\n.section-title {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.filter-options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16rpx;\r\n}\r\n\r\n.option-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 24rpx;\r\n  background: #f5f7fa;\r\n  border-radius: 12rpx;\r\n}\r\n\r\n.option-item.active {\r\n  background: #e3f2fd;\r\n}\r\n\r\n.option-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.confirm-btn {\r\n  width: 100%;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  border: none;\r\n  padding: 28rpx;\r\n  border-radius: 16rpx;\r\n  font-size: 30rpx;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 操作弹窗 */\r\n.action-content {\r\n  background: white;\r\n  border-radius: 32rpx 32rpx 0 0;\r\n  padding-bottom: env(safe-area-inset-bottom);\r\n}\r\n\r\n.action-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16rpx;\r\n  padding: 32rpx;\r\n  border-bottom: 1rpx solid #f0f0f0;\r\n}\r\n\r\n.action-item.cancel {\r\n  justify-content: center;\r\n  border-bottom: none;\r\n  margin-top: 8rpx;\r\n}\r\n\r\n.action-item.cancel .action-text {\r\n  color: #666;\r\n}\r\n\r\n.action-item.danger .action-text.warning {\r\n  color: #ff9500;\r\n  font-weight: 500;\r\n}\r\n\r\n.action-text {\r\n  font-size: 30rpx;\r\n  color: #333;\r\n}\r\n\r\n/* 练习模式选择弹窗 */\r\n.mode-popup {\r\n  width: 600rpx;\r\n  background: white;\r\n  border-radius: 24rpx;\r\n  padding: 32rpx;\r\n}\r\n\r\n.mode-options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20rpx;\r\n  margin-top: 24rpx;\r\n}\r\n\r\n.mode-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40rpx 32rpx;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #ffffff 100%);\r\n  border-radius: 16rpx;\r\n  border: 2rpx solid #e0e0e0;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.mode-card:active {\r\n  transform: scale(0.98);\r\n  border-color: #667eea;\r\n}\r\n\r\n.mode-title {\r\n  font-size: 32rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-top: 16rpx;\r\n}\r\n\r\n.mode-desc {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n  margin-top: 8rpx;\r\n}\r\n\r\n/* 章节选择弹窗 */\r\n.chapter-select-content {\r\n  background: white;\r\n  border-radius: 32rpx 32rpx 0 0;\r\n  padding: 32rpx;\r\n  padding-bottom: calc(32rpx + env(safe-area-inset-bottom));\r\n  max-height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chapter-list {\r\n  flex: 1;\r\n  margin-top: 24rpx;\r\n  max-height: 600rpx;\r\n}\r\n\r\n.chapter-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 32rpx 24rpx;\r\n  background: #f5f7fa;\r\n  border-radius: 16rpx;\r\n  margin-bottom: 16rpx;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.chapter-item:active {\r\n  transform: scale(0.98);\r\n  background: #e3f2fd;\r\n}\r\n\r\n.chapter-info {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8rpx;\r\n}\r\n\r\n.chapter-name {\r\n  font-size: 30rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.chapter-count {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n}\r\n\r\n.chapter-progress {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12rpx;\r\n}\r\n\r\n.progress-percent {\r\n  font-size: 26rpx;\r\n  color: #667eea;\r\n  font-weight: 600;\r\n}\r\n</style>\r\n\r\n","import MiniProgramPage from 'E:/开源项目/wx/uni-ui/pages/exam-list/exam-list.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","computed","onShow","uni","get","del"],"mappings":"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"}
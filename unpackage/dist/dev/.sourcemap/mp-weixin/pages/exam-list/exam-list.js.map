{"version":3,"file":"exam-list.js","sources":["pages/exam-list/exam-list.vue","../../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvZXhhbS1saXN0L2V4YW0tbGlzdC52dWU"],"sourcesContent":["<template>\r\n  <view class=\"exam-list-container\">\r\n    <!-- 顶部搜索栏 -->\r\n    <view class=\"search-section\">\r\n      <view class=\"search-box\">\r\n        <uni-icons type=\"search\" size=\"18\" color=\"#999\" />\r\n        <input \r\n          class=\"search-input\" \r\n          placeholder=\"搜索题库名称或文件名\" \r\n          v-model=\"searchKeyword\"\r\n          @input=\"handleSearch\"\r\n        />\r\n        <uni-icons \r\n          v-if=\"searchKeyword\" \r\n          type=\"clear\" \r\n          size=\"16\" \r\n          color=\"#999\" \r\n          @click=\"clearSearch\"\r\n        />\r\n      </view>\r\n      <view class=\"filter-btn\" @click=\"showFilterPopup\">\r\n        <uni-icons type=\"funnel\" size=\"18\" color=\"#333\" />\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 数据统计卡片 -->\r\n    <view class=\"stats-overview\">\r\n      <view class=\"stat-card\">\r\n        <text class=\"stat-number\">{{ totalBanks }}</text>\r\n        <text class=\"stat-label\">题库总数</text>\r\n      </view>\r\n      <view class=\"stat-card\">\r\n        <text class=\"stat-number\">{{ totalQuestions }}</text>\r\n        <text class=\"stat-label\">题目总数</text>\r\n      </view>\r\n      <view class=\"stat-card\">\r\n        <text class=\"stat-number\">{{ todayAdded }}</text>\r\n        <text class=\"stat-label\">今日新增</text>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 题库列表 -->\r\n    <view class=\"bank-list\">\r\n      <!-- 加载状态 -->\r\n      <view v-if=\"loading\" class=\"loading-state\">\r\n        <uni-icons type=\"spinner-cycle\" size=\"40\" color=\"#007AFF\" class=\"loading-icon\" />\r\n        <text class=\"loading-text\">正在加载题库...</text>\r\n      </view>\r\n\r\n      <!-- 空状态 -->\r\n      <view v-else-if=\"filteredBankList.length === 0\" class=\"empty-state\">\r\n        <uni-icons type=\"folder-add\" size=\"80\" color=\"#ddd\" />\r\n        <text class=\"empty-title\">暂无题库</text>\r\n        <text class=\"empty-desc\">上传文件创建你的第一个题库吧</text>\r\n        <button class=\"upload-btn\" @click=\"goToUpload\">\r\n          <uni-icons type=\"plus\" size=\"16\" color=\"#fff\" />\r\n          <text>上传题库</text>\r\n        </button>\r\n      </view>\r\n\r\n      <!-- 题库卡片列表 -->\r\n      <view v-else class=\"bank-cards\">\r\n        <view \r\n          class=\"bank-card\" \r\n          v-for=\"bank in filteredBankList\" \r\n          :key=\"bank.id\"\r\n          @click=\"startExam(bank)\"\r\n        >\r\n          <!-- 卡片头部 -->\r\n          <view class=\"card-header\">\r\n            <view class=\"bank-icon\">\r\n              <uni-icons type=\"paperplane\" size=\"24\" color=\"#fff\" />\r\n            </view>\r\n            <view class=\"bank-info\">\r\n              <text class=\"bank-name\">{{ bank.bank_name }}</text>\r\n              <text class=\"file-name\">{{ bank.file_name }}</text>\r\n            </view>\r\n            <view class=\"more-btn\" @click.stop=\"showMoreActions(bank)\">\r\n              <uni-icons type=\"more-filled\" size=\"20\" color=\"#999\" />\r\n            </view>\r\n          </view>\r\n\r\n          <!-- 卡片内容 -->\r\n          <view class=\"card-content\">\r\n            <view class=\"content-item\">\r\n              <uni-icons type=\"compose\" size=\"16\" color=\"#666\" />\r\n              <text class=\"item-text\">{{ bank.total_questions }} 道题目</text>\r\n            </view>\r\n            <view class=\"content-item\">\r\n              <uni-icons type=\"calendar\" size=\"16\" color=\"#666\" />\r\n              <text class=\"item-text\">{{ formatDate(bank.created_at) }}</text>\r\n            </view>\r\n          </view>\r\n\r\n          <!-- 题目类型分布 -->\r\n          <view class=\"card-tags\">\r\n            <view \r\n              class=\"tag\" \r\n              v-for=\"(type, index) in getQuestionTypes(bank)\" \r\n              :key=\"index\"\r\n              :class=\"'tag-' + type.type\"\r\n            >\r\n              <text class=\"tag-text\">{{ type.label }}×{{ type.count }}</text>\r\n            </view>\r\n          </view>\r\n\r\n          <!-- 学习进度显示 -->\r\n          <view class=\"progress-section\">\r\n            <view class=\"progress-info\">\r\n              <text class=\"progress-label\">学习进度</text>\r\n              <text class=\"progress-value\">{{ bank.progress || 0 }}%</text>\r\n            </view>\r\n            <view class=\"progress-bar-wrapper\">\r\n              <view class=\"progress-bar-bg\">\r\n                <view class=\"progress-bar-fill\" :style=\"{width: (bank.progress || 0) + '%'}\"></view>\r\n              </view>\r\n              <text class=\"progress-text\">学到第 {{ bank.current_question_index || 0 }}/{{ bank.total_questions }} 题</text>\r\n            </view>\r\n            <view v-if=\"bank.completed_count > 0\" class=\"completed-info\">\r\n              <text class=\"completed-text\">✓ 已完成 {{ bank.completed_count }} 题</text>\r\n            </view>\r\n          </view>\r\n\r\n          <!-- 卡片底部操作 -->\r\n          <view class=\"card-footer\">\r\n            <view class=\"footer-btn primary\" @click.stop=\"startExam(bank)\">\r\n              <uni-icons type=\"forward\" size=\"16\" color=\"#fff\" />\r\n              <text class=\"btn-text\">{{ (bank.current_question_index > 0) ? '继续学习' : '开始练习' }}</text>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 筛选弹窗 -->\r\n    <uni-popup ref=\"filterPopup\" type=\"bottom\">\r\n      <view class=\"filter-content\">\r\n        <view class=\"filter-header\">\r\n          <text class=\"filter-title\">筛选条件</text>\r\n          <text class=\"filter-reset\" @click=\"resetFilter\">重置</text>\r\n        </view>\r\n        \r\n        <view class=\"filter-section\">\r\n          <text class=\"section-title\">排序方式</text>\r\n          <view class=\"filter-options\">\r\n            <view \r\n              class=\"option-item\" \r\n              v-for=\"sort in sortOptions\" \r\n              :key=\"sort.value\"\r\n              :class=\"{active: currentSort === sort.value}\"\r\n              @click=\"selectSort(sort.value)\"\r\n            >\r\n              <text class=\"option-text\">{{ sort.label }}</text>\r\n              <uni-icons v-if=\"currentSort === sort.value\" type=\"checkmarkempty\" size=\"18\" color=\"#007AFF\" />\r\n            </view>\r\n          </view>\r\n        </view>\r\n\r\n        <button class=\"confirm-btn\" @click=\"applyFilter\">确认</button>\r\n      </view>\r\n    </uni-popup>\r\n\r\n    <!-- 更多操作弹窗 -->\r\n    <uni-popup ref=\"actionPopup\" type=\"bottom\">\r\n      <view class=\"action-content\">\r\n        <view class=\"action-item\" @click=\"shareBank\">\r\n          <uni-icons type=\"redo\" size=\"20\" color=\"#333\" />\r\n          <text class=\"action-text\">分享题库</text>\r\n        </view>\r\n        <view \r\n          v-if=\"selectedBank && selectedBank.current_question_index > 0\" \r\n          class=\"action-item danger\" \r\n          @click=\"resetBankProgress\"\r\n        >\r\n          <uni-icons type=\"refreshempty\" size=\"20\" color=\"#ff9500\" />\r\n          <text class=\"action-text warning\">重置学习进度</text>\r\n        </view>\r\n        <view class=\"action-item cancel\" @click=\"closeActionPopup\">\r\n          <text class=\"action-text\">取消</text>\r\n        </view>\r\n      </view>\r\n    </uni-popup>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed } from 'vue'\r\nimport { onShow } from '@dcloudio/uni-app'\r\nimport { get, del } from '@/utils/request.js'\r\n\r\n// 搜索关键词\r\nconst searchKeyword = ref('')\r\n\r\n// 加载状态\r\nconst loading = ref(false)\r\n\r\n// 题库列表\r\nconst bankList = ref([])\r\n\r\n// 当前选中的题库\r\nconst selectedBank = ref(null)\r\n\r\n// 排序选项\r\nconst sortOptions = [\r\n  { label: '最新创建', value: 'created_desc' },\r\n  { label: '最早创建', value: 'created_asc' },\r\n  { label: '题目最多', value: 'questions_desc' },\r\n  { label: '题目最少', value: 'questions_asc' }\r\n]\r\n\r\n// 当前排序\r\nconst currentSort = ref('created_desc')\r\n\r\n// 弹窗引用\r\nconst filterPopup = ref(null)\r\nconst actionPopup = ref(null)\r\n\r\n// 统计数据\r\nconst totalBanks = computed(() => bankList.value.length)\r\nconst totalQuestions = computed(() => {\r\n  return bankList.value.reduce((sum, bank) => sum + bank.total_questions, 0)\r\n})\r\nconst todayAdded = computed(() => {\r\n  const today = new Date().toDateString()\r\n  return bankList.value.filter(bank => {\r\n    const bankDate = new Date(bank.created_at).toDateString()\r\n    return bankDate === today\r\n  }).length\r\n})\r\n\r\n// 过滤后的题库列表\r\nconst filteredBankList = computed(() => {\r\n  let list = [...bankList.value]\r\n  \r\n  // 搜索过滤\r\n  if (searchKeyword.value) {\r\n    const keyword = searchKeyword.value.toLowerCase()\r\n    list = list.filter(bank => \r\n      bank.bank_name.toLowerCase().includes(keyword) ||\r\n      bank.file_name.toLowerCase().includes(keyword)\r\n    )\r\n  }\r\n  \r\n  // 排序\r\n  list.sort((a, b) => {\r\n    switch (currentSort.value) {\r\n      case 'created_desc':\r\n        return new Date(b.created_at) - new Date(a.created_at)\r\n      case 'created_asc':\r\n        return new Date(a.created_at) - new Date(b.created_at)\r\n      case 'questions_desc':\r\n        return b.total_questions - a.total_questions\r\n      case 'questions_asc':\r\n        return a.total_questions - b.total_questions\r\n      default:\r\n        return 0\r\n    }\r\n  })\r\n  \r\n  return list\r\n})\r\n\r\n// 页面显示时刷新题库列表（包括首次加载和从答题页返回）\r\nonShow(() => {\r\n  console.log('📱 题库列表页面显示，刷新数据...')\r\n  fetchBankList()\r\n})\r\n\r\n// 获取题库列表\r\nconst fetchBankList = async () => {\r\n  loading.value = true\r\n  try {\r\n    // 1. 获取题库列表\r\n    const data = await get('/parse-results')\r\n    bankList.value = data || []\r\n    \r\n    // 2. 获取用户所有学习进度\r\n    try {\r\n      const progressData = await get('/user-progress')\r\n      const progressMap = {}\r\n      \r\n      // 将进度数据转换为以 bank_id 为键的对象\r\n      if (progressData && progressData.length > 0) {\r\n        progressData.forEach(progress => {\r\n          progressMap[progress.bank_id] = progress\r\n        })\r\n      }\r\n      \r\n      // 3. 合并进度数据到题库列表\r\n      bankList.value.forEach(bank => {\r\n        const progress = progressMap[bank.bank_id]\r\n        if (progress) {\r\n          bank.current_question_index = progress.current_question_index || 0\r\n          bank.completed_count = progress.completed_count || 0\r\n          bank.last_study_time = progress.last_study_time\r\n          \r\n          // 计算进度：基于当前学习位置，而不是已完成数量\r\n          // 如果用户已经查看了题目但没作答，仍然算作进度\r\n          const totalQuestions = bank.total_questions || progress.total_questions || 1\r\n          const currentPosition = Math.max(progress.current_question_index || 0, progress.completed_count || 0)\r\n          bank.progress = Math.min(Math.round((currentPosition / totalQuestions) * 100), 100)\r\n          \r\n          console.log(`题库 ${bank.bank_name} 进度计算:`, {\r\n            current_index: progress.current_question_index,\r\n            completed: progress.completed_count,\r\n            total: totalQuestions,\r\n            calculated_progress: bank.progress\r\n          })\r\n        } else {\r\n          bank.progress = 0\r\n          bank.current_question_index = 0\r\n          bank.completed_count = 0\r\n        }\r\n      })\r\n    } catch (progressError) {\r\n      console.error('获取学习进度失败:', progressError)\r\n      // 进度获取失败不影响题库列表显示\r\n      bankList.value.forEach(bank => {\r\n        bank.progress = 0\r\n      })\r\n    }\r\n  } catch (error) {\r\n    console.error('获取题库列表失败:', error)\r\n    uni.showToast({\r\n      title: error.message || '加载失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取题目类型统计\r\nconst getQuestionTypes = (bank) => {\r\n  if (!bank.questions || bank.questions.length === 0) {\r\n    return []\r\n  }\r\n  \r\n  const typeMap = {\r\n    'single': { label: '单选', count: 0, type: 'single' },\r\n    'multiple': { label: '多选', count: 0, type: 'multiple' },\r\n    'judge': { label: '判断', count: 0, type: 'judge' },\r\n    'fill': { label: '填空', count: 0, type: 'fill' }\r\n  }\r\n  \r\n  bank.questions.forEach(q => {\r\n    if (typeMap[q.type]) {\r\n      typeMap[q.type].count++\r\n    }\r\n  })\r\n  \r\n  return Object.values(typeMap).filter(type => type.count > 0)\r\n}\r\n\r\n// 格式化日期\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString)\r\n  const now = new Date()\r\n  const diff = now - date\r\n  \r\n  const minutes = Math.floor(diff / 60000)\r\n  const hours = Math.floor(diff / 3600000)\r\n  const days = Math.floor(diff / 86400000)\r\n  \r\n  if (minutes < 1) return '刚刚'\r\n  if (minutes < 60) return `${minutes}分钟前`\r\n  if (hours < 24) return `${hours}小时前`\r\n  if (days < 7) return `${days}天前`\r\n  \r\n  return `${date.getMonth() + 1}月${date.getDate()}日`\r\n}\r\n\r\n// 搜索处理\r\nconst handleSearch = () => {\r\n  // 搜索逻辑已在 computed 中处理\r\n}\r\n\r\n// 清空搜索\r\nconst clearSearch = () => {\r\n  searchKeyword.value = ''\r\n}\r\n\r\n// 显示筛选弹窗\r\nconst showFilterPopup = () => {\r\n  filterPopup.value.open()\r\n}\r\n\r\n// 选择排序\r\nconst selectSort = (value) => {\r\n  currentSort.value = value\r\n}\r\n\r\n// 重置筛选\r\nconst resetFilter = () => {\r\n  currentSort.value = 'created_desc'\r\n}\r\n\r\n// 应用筛选\r\nconst applyFilter = () => {\r\n  filterPopup.value.close()\r\n}\r\n\r\n// 开始考试\r\nconst startExam = (bank) => {\r\n  // 判断是否有学习进度（只要 current_question_index > 0 就算有进度）\r\n  const hasProgress = bank.current_question_index > 0 && bank.current_question_index < bank.total_questions\r\n  \r\n  let title = '开始练习'\r\n  let content = `准备开始「${bank.bank_name}」练习\\n共 ${bank.total_questions} 道题目`\r\n  let confirmText = '开始'\r\n  \r\n  if (hasProgress) {\r\n    title = '继续学习'\r\n    content = `「${bank.bank_name}」\\n\\n上次学习到第 ${bank.current_question_index + 1} 题\\n进度：${bank.progress}%\\n已完成：${bank.completed_count} 题\\n\\n是否继续学习？`\r\n    confirmText = '继续'\r\n  }\r\n  \r\n  uni.showModal({\r\n    title: title,\r\n    content: content,\r\n    confirmText: confirmText,\r\n    cancelText: '取消',\r\n    success: (res) => {\r\n      if (res.confirm) {\r\n        // 跳转到答题页面\r\n        uni.navigateTo({\r\n          url: `/pages/exam/exam?bankId=${bank.bank_id}&resultId=${bank.id}`\r\n        })\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 显示更多操作\r\nconst showMoreActions = (bank) => {\r\n  selectedBank.value = bank\r\n  actionPopup.value.open()\r\n}\r\n\r\n// 关闭操作弹窗\r\nconst closeActionPopup = () => {\r\n  actionPopup.value.close()\r\n}\r\n\r\n// 分享题库\r\nconst shareBank = () => {\r\n  actionPopup.value.close()\r\n  uni.showToast({\r\n    title: '分享功能开发中',\r\n    icon: 'none'\r\n  })\r\n}\r\n\r\n// 重置题库学习进度\r\nconst resetBankProgress = () => {\r\n  if (!selectedBank.value) return\r\n  \r\n  const bank = selectedBank.value\r\n  actionPopup.value.close()\r\n  \r\n  uni.showModal({\r\n    title: '重置学习进度',\r\n    content: `确定要重置「${bank.bank_name}」的学习进度吗？\\n\\n当前进度：${bank.progress}%\\n已完成：${bank.completed_count} 题\\n\\n重置后将从第一题重新开始，此操作不可恢复。`,\r\n    confirmText: '重置',\r\n    confirmColor: '#ff9500',\r\n    cancelText: '取消',\r\n    success: async (res) => {\r\n      if (res.confirm) {\r\n        try {\r\n          uni.showLoading({ title: '重置中...' })\r\n          \r\n          // 调用重置接口\r\n          await del(`/user-progress/${bank.bank_id}`)\r\n          \r\n          // 刷新列表\r\n          await fetchBankList()\r\n          \r\n          uni.hideLoading()\r\n          uni.showToast({\r\n            title: '重置成功',\r\n            icon: 'success',\r\n            duration: 2000\r\n          })\r\n          \r\n          console.log(`🔄 题库 ${bank.bank_name} 学习进度已重置`)\r\n        } catch (error) {\r\n          uni.hideLoading()\r\n          console.error('重置进度失败:', error)\r\n          uni.showToast({\r\n            title: error.message || '重置失败',\r\n            icon: 'none',\r\n            duration: 2000\r\n          })\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 跳转到上传页面\r\nconst goToUpload = () => {\r\n  uni.navigateTo({\r\n    url: '/pages/upload/upload'\r\n  })\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.exam-list-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(180deg, #f5f7fa 0%, #ffffff 100%);\r\n  padding-bottom: 40rpx;\r\n}\r\n\r\n/* 搜索栏 */\r\n.search-section {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20rpx;\r\n  background: white;\r\n  gap: 16rpx;\r\n}\r\n\r\n.search-box {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  background: #f5f7fa;\r\n  border-radius: 50rpx;\r\n  padding: 16rpx 24rpx;\r\n  gap: 12rpx;\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.filter-btn {\r\n  width: 72rpx;\r\n  height: 72rpx;\r\n  background: #f5f7fa;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* 统计卡片 */\r\n.stats-overview {\r\n  display: flex;\r\n  gap: 16rpx;\r\n  padding: 20rpx;\r\n}\r\n\r\n.stat-card {\r\n  flex: 1;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  padding: 32rpx 20rpx;\r\n  border-radius: 16rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-shadow: 0 8rpx 24rpx rgba(102, 126, 234, 0.25);\r\n}\r\n\r\n.stat-card:nth-child(2) {\r\n  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\r\n}\r\n\r\n.stat-card:nth-child(3) {\r\n  background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\r\n}\r\n\r\n.stat-number {\r\n  font-size: 48rpx;\r\n  font-weight: bold;\r\n  color: white;\r\n  margin-bottom: 8rpx;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 24rpx;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n/* 题库列表 */\r\n.bank-list {\r\n  padding: 0 20rpx;\r\n}\r\n\r\n/* 加载状态 */\r\n.loading-state {\r\n  padding: 120rpx 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 24rpx;\r\n}\r\n\r\n.loading-icon {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.loading-text {\r\n  font-size: 28rpx;\r\n  color: #999;\r\n}\r\n\r\n/* 空状态 */\r\n.empty-state {\r\n  padding: 120rpx 40rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.empty-title {\r\n  font-size: 32rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-top: 32rpx;\r\n  margin-bottom: 16rpx;\r\n}\r\n\r\n.empty-desc {\r\n  font-size: 26rpx;\r\n  color: #999;\r\n  margin-bottom: 48rpx;\r\n}\r\n\r\n.upload-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8rpx;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  border: none;\r\n  padding: 24rpx 48rpx;\r\n  border-radius: 50rpx;\r\n  font-size: 28rpx;\r\n}\r\n\r\n/* 题库卡片 */\r\n.bank-cards {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24rpx;\r\n}\r\n\r\n.bank-card {\r\n  background: white;\r\n  border-radius: 20rpx;\r\n  padding: 32rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.06);\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.bank-card:active {\r\n  transform: scale(0.98);\r\n}\r\n\r\n/* 卡片头部 */\r\n.card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 24rpx;\r\n}\r\n\r\n.bank-icon {\r\n  width: 80rpx;\r\n  height: 80rpx;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 16rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20rpx;\r\n}\r\n\r\n.bank-info {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8rpx;\r\n}\r\n\r\n.bank-name {\r\n  font-size: 32rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.file-name {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n}\r\n\r\n.more-btn {\r\n  padding: 8rpx;\r\n}\r\n\r\n/* 卡片内容 */\r\n.card-content {\r\n  display: flex;\r\n  gap: 32rpx;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.content-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8rpx;\r\n}\r\n\r\n.item-text {\r\n  font-size: 26rpx;\r\n  color: #666;\r\n}\r\n\r\n/* 标签 */\r\n.card-tags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 12rpx;\r\n  margin-bottom: 24rpx;\r\n}\r\n\r\n.tag {\r\n  padding: 8rpx 16rpx;\r\n  border-radius: 8rpx;\r\n  background: #f0f0f0;\r\n}\r\n\r\n.tag-single {\r\n  background: #e3f2fd;\r\n}\r\n\r\n.tag-multiple {\r\n  background: #fff3e0;\r\n}\r\n\r\n.tag-judge {\r\n  background: #e8f5e9;\r\n}\r\n\r\n.tag-fill {\r\n  background: #fce4ec;\r\n}\r\n\r\n.tag-text {\r\n  font-size: 22rpx;\r\n  color: #666;\r\n}\r\n\r\n/* 学习进度区域 */\r\n.progress-section {\r\n  padding: 24rpx 0;\r\n  border-top: 1rpx solid #f0f0f0;\r\n  margin-top: 20rpx;\r\n}\r\n\r\n.progress-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 12rpx;\r\n}\r\n\r\n.progress-label {\r\n  font-size: 26rpx;\r\n  color: #666;\r\n}\r\n\r\n.progress-value {\r\n  font-size: 28rpx;\r\n  font-weight: 600;\r\n  color: #667eea;\r\n}\r\n\r\n.progress-bar-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16rpx;\r\n}\r\n\r\n.progress-bar-bg {\r\n  flex: 1;\r\n  height: 12rpx;\r\n  background: #f0f0f0;\r\n  border-radius: 6rpx;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar-fill {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 6rpx;\r\n  transition: width 0.3s ease;\r\n  min-width: 2%;\r\n}\r\n\r\n.progress-text {\r\n  font-size: 22rpx;\r\n  color: #999;\r\n  white-space: nowrap;\r\n}\r\n\r\n.completed-info {\r\n  margin-top: 8rpx;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.completed-text {\r\n  font-size: 22rpx;\r\n  color: #28a745;\r\n}\r\n\r\n/* 卡片底部 */\r\n.card-footer {\r\n  display: flex;\r\n  gap: 16rpx;\r\n  margin-top: 20rpx;\r\n}\r\n\r\n.footer-btn {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8rpx;\r\n  padding: 24rpx;\r\n  border-radius: 12rpx;\r\n  background: white;\r\n}\r\n\r\n.footer-btn.primary {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border: none;\r\n}\r\n\r\n.footer-btn .btn-text {\r\n  font-size: 28rpx;\r\n  color: white;\r\n}\r\n\r\n/* 筛选弹窗 */\r\n.filter-content {\r\n  background: white;\r\n  border-radius: 32rpx 32rpx 0 0;\r\n  padding: 40rpx 32rpx;\r\n  padding-bottom: calc(40rpx + env(safe-area-inset-bottom));\r\n}\r\n\r\n.filter-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 32rpx;\r\n}\r\n\r\n.filter-title {\r\n  font-size: 32rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.filter-reset {\r\n  font-size: 28rpx;\r\n  color: #007AFF;\r\n}\r\n\r\n.filter-section {\r\n  margin-bottom: 32rpx;\r\n}\r\n\r\n.section-title {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  margin-bottom: 20rpx;\r\n  display: block;\r\n}\r\n\r\n.filter-options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16rpx;\r\n}\r\n\r\n.option-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 24rpx;\r\n  background: #f5f7fa;\r\n  border-radius: 12rpx;\r\n}\r\n\r\n.option-item.active {\r\n  background: #e3f2fd;\r\n}\r\n\r\n.option-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.confirm-btn {\r\n  width: 100%;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  border: none;\r\n  padding: 28rpx;\r\n  border-radius: 16rpx;\r\n  font-size: 30rpx;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 操作弹窗 */\r\n.action-content {\r\n  background: white;\r\n  border-radius: 32rpx 32rpx 0 0;\r\n  padding-bottom: env(safe-area-inset-bottom);\r\n}\r\n\r\n.action-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16rpx;\r\n  padding: 32rpx;\r\n  border-bottom: 1rpx solid #f0f0f0;\r\n}\r\n\r\n.action-item.cancel {\r\n  justify-content: center;\r\n  border-bottom: none;\r\n  margin-top: 8rpx;\r\n}\r\n\r\n.action-item.cancel .action-text {\r\n  color: #666;\r\n}\r\n\r\n.action-item.danger .action-text.warning {\r\n  color: #ff9500;\r\n  font-weight: 500;\r\n}\r\n\r\n.action-text {\r\n  font-size: 30rpx;\r\n  color: #333;\r\n}\r\n</style>\r\n\r\n","import MiniProgramPage from 'E:/personal/wx/uni-ui/pages/exam-list/exam-list.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","computed","onShow","uni","get","totalQuestions","del"],"mappings":"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"}
{"version":3,"file":"exam.js","sources":["pages/exam/exam.vue","../../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvZXhhbS9leGFtLnZ1ZQ"],"sourcesContent":["<template>\r\n  <view class=\"exam-container\">\r\n    <!-- 顶部进度栏 -->\r\n    <view class=\"exam-header\">\r\n      <view class=\"header-info\">\r\n        <view class=\"back-btn\" @click=\"handleBack\">\r\n          <uni-icons type=\"back\" size=\"20\" color=\"#333\" />\r\n        </view>\r\n        <view class=\"exam-title\">\r\n          <text class=\"title-text\">{{ bankInfo.bank_name }}</text>\r\n          <text class=\"subtitle-text\">{{ currentIndex + 1 }} / {{ questions.length }}</text>\r\n        </view>\r\n        <view class=\"stats-btn\" @click=\"showStats\">\r\n          <uni-icons type=\"bars\" size=\"20\" color=\"#333\" />\r\n        </view>\r\n      </view>\r\n      <view class=\"progress-container\">\r\n        <view class=\"progress-bar\">\r\n          <view class=\"progress-fill\" :style=\"{width: progressPercent + '%'}\"></view>\r\n        </view>\r\n        <text class=\"progress-text\">{{ progressPercent }}%</text>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 加载状态 -->\r\n    <view v-if=\"loading\" class=\"loading-state\">\r\n      <uni-icons type=\"spinner-cycle\" size=\"40\" color=\"#667eea\" class=\"loading-icon\" />\r\n      <text class=\"loading-text\">正在加载题目...</text>\r\n    </view>\r\n\r\n    <!-- 题目内容 -->\r\n    <view v-else-if=\"currentQuestion\" class=\"question-content\">\r\n      <!-- 题目卡片 -->\r\n      <view class=\"question-card\">\r\n        <view class=\"question-header\">\r\n          <view class=\"question-type\" :class=\"'type-' + currentQuestion.type\">\r\n            <text class=\"type-text\">{{ getTypeLabel(currentQuestion.type) }}</text>\r\n          </view>\r\n          <view class=\"question-difficulty\">\r\n            <uni-icons \r\n              v-for=\"i in 3\" \r\n              :key=\"i\"\r\n              type=\"star-filled\" \r\n              :size=\"14\" \r\n              :color=\"i <= currentQuestion.difficulty ? '#ffc107' : '#ddd'\" \r\n            />\r\n          </view>\r\n        </view>\r\n\r\n        <view class=\"question-number\">\r\n          <text>第 {{ currentIndex + 1 }} 题</text>\r\n        </view>\r\n\r\n        <view class=\"question-text\">\r\n          <text>{{ currentQuestion.content }}</text>\r\n        </view>\r\n\r\n        <!-- 标签 -->\r\n        <view v-if=\"currentQuestion.tags && currentQuestion.tags.length > 0\" class=\"question-tags\">\r\n          <view class=\"tag\" v-for=\"(tag, index) in currentQuestion.tags\" :key=\"index\">\r\n            <text class=\"tag-text\">{{ tag }}</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n\r\n      <!-- 选项列表 -->\r\n      <view class=\"options-list\">\r\n        <view \r\n          v-for=\"(option, index) in currentQuestion.options\" \r\n          :key=\"index\"\r\n          class=\"option-item\"\r\n          :class=\"{\r\n            'selected': isOptionSelected(index),\r\n            'correct': showAnswer && isCorrectOption(index),\r\n            'wrong': showAnswer && isOptionSelected(index) && !isCorrectOption(index),\r\n            'disabled': showAnswer\r\n          }\"\r\n          @click=\"selectOption(index)\"\r\n        >\r\n          <view class=\"option-label\">\r\n            <text class=\"label-text\">{{ getOptionLabel(index) }}</text>\r\n          </view>\r\n          <view class=\"option-content\">\r\n            <text class=\"option-text\">{{ option }}</text>\r\n          </view>\r\n          <view class=\"option-icon\">\r\n            <uni-icons \r\n              v-if=\"showAnswer && isCorrectOption(index)\"\r\n              type=\"checkmarkempty\" \r\n              size=\"20\" \r\n              color=\"#28a745\" \r\n            />\r\n            <uni-icons \r\n              v-else-if=\"showAnswer && isOptionSelected(index) && !isCorrectOption(index)\"\r\n              type=\"closeempty\" \r\n              size=\"20\" \r\n              color=\"#dc3545\" \r\n            />\r\n            <view \r\n              v-else-if=\"isOptionSelected(index)\" \r\n              class=\"selected-dot\"\r\n            ></view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n\r\n      <!-- 答案解析 -->\r\n      <view v-if=\"showAnswer\" class=\"answer-section\">\r\n        <view class=\"answer-header\">\r\n          <uni-icons type=\"info\" size=\"20\" color=\"#667eea\" />\r\n          <text class=\"answer-title\">答案解析</text>\r\n        </view>\r\n        <view class=\"answer-content\">\r\n          <view class=\"answer-row\">\r\n            <text class=\"answer-label\">正确答案：</text>\r\n            <text class=\"answer-value correct\">{{ formatAnswer(currentQuestion.answer) }}</text>\r\n          </view>\r\n          <view class=\"answer-row\">\r\n            <text class=\"answer-label\">你的答案：</text>\r\n            <text class=\"answer-value\" :class=\"isAnswerCorrect ? 'correct' : 'wrong'\">\r\n              {{ userAnswer || '未作答' }}\r\n            </text>\r\n          </view>\r\n          <view class=\"explanation\">\r\n            <text class=\"explanation-label\">解析：</text>\r\n            <text class=\"explanation-text\">{{ currentQuestion.explanation || '暂无解析' }}</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n\r\n      <!-- 操作按钮 -->\r\n      <view class=\"action-buttons\">\r\n        <button \r\n          class=\"action-btn secondary\"\r\n          :disabled=\"currentIndex === 0\"\r\n          @click=\"prevQuestion\"\r\n        >\r\n          <uni-icons type=\"back\" size=\"18\" color=\"#fff\" />\r\n          <text>上一题</text>\r\n        </button>\r\n\r\n        <button \r\n          v-if=\"!showAnswer\"\r\n          class=\"action-btn primary show-answer\"\r\n          @click=\"toggleAnswer\"\r\n        >\r\n          <uni-icons type=\"eye\" size=\"18\" color=\"#fff\" />\r\n          <text>显示答案</text>\r\n        </button>\r\n        <button \r\n          v-else\r\n          class=\"action-btn primary hide-answer\"\r\n          @click=\"toggleAnswer\"\r\n        >\r\n          <uni-icons type=\"eye-slash\" size=\"18\" color=\"#fff\" />\r\n          <text>隐藏答案</text>\r\n        </button>\r\n\r\n        <button \r\n          v-if=\"currentIndex < questions.length - 1\"\r\n          class=\"action-btn secondary\"\r\n          @click=\"nextQuestion\"\r\n        >\r\n          <text>下一题</text>\r\n          <uni-icons type=\"forward\" size=\"18\" color=\"#fff\" />\r\n        </button>\r\n        <button \r\n          v-else\r\n          class=\"action-btn finish\"\r\n          @click=\"finishExam\"\r\n        >\r\n          <uni-icons type=\"checkmarkempty\" size=\"18\" color=\"#fff\" />\r\n          <text>完成</text>\r\n        </button>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 统计弹窗 -->\r\n    <uni-popup ref=\"statsPopup\" type=\"center\">\r\n      <view class=\"stats-popup\">\r\n        <view class=\"popup-header\">\r\n          <text class=\"popup-title\">答题统计</text>\r\n          <view class=\"close-btn\" @click=\"closeStats\">\r\n            <uni-icons type=\"closeempty\" size=\"20\" color=\"#999\" />\r\n          </view>\r\n        </view>\r\n\r\n        <view class=\"stats-content\">\r\n          <view class=\"stat-row\">\r\n            <view class=\"stat-item\">\r\n              <text class=\"stat-number primary\">{{ answeredCount }}</text>\r\n              <text class=\"stat-label\">已答题</text>\r\n            </view>\r\n            <view class=\"stat-item\">\r\n              <text class=\"stat-number success\">{{ correctCount }}</text>\r\n              <text class=\"stat-label\">正确数</text>\r\n            </view>\r\n            <view class=\"stat-item\">\r\n              <text class=\"stat-number danger\">{{ wrongCount }}</text>\r\n              <text class=\"stat-label\">错误数</text>\r\n            </view>\r\n          </view>\r\n\r\n          <view class=\"accuracy-row\">\r\n            <text class=\"accuracy-label\">正确率</text>\r\n            <text class=\"accuracy-value\">{{ accuracy }}%</text>\r\n          </view>\r\n\r\n          <view class=\"question-grid\">\r\n            <view \r\n              v-for=\"(q, index) in questions\" \r\n              :key=\"index\"\r\n              class=\"grid-item\"\r\n              :class=\"{\r\n                'current': index === currentIndex,\r\n                'answered': userAnswers[index],\r\n                'correct': userAnswers[index] && checkAnswer(index),\r\n                'wrong': userAnswers[index] && !checkAnswer(index)\r\n              }\"\r\n              @click=\"jumpToQuestion(index)\"\r\n            >\r\n              <text class=\"grid-number\">{{ index + 1 }}</text>\r\n            </view>\r\n          </view>\r\n        </view>\r\n\r\n        <view class=\"popup-buttons\">\r\n          <button class=\"popup-btn secondary\" @click=\"resetProgress\">重新练习</button>\r\n          <button class=\"popup-btn primary\" @click=\"closeStats\">继续练习</button>\r\n        </view>\r\n      </view>\r\n    </uni-popup>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue'\r\nimport { get, post, del } from '@/utils/request.js'\r\n\r\n// 获取页面参数\r\nconst bankInfo = ref({\r\n  bank_name: '',\r\n  file_name: ''\r\n})\r\nconst resultId = ref(0)\r\nconst bankId = ref(0)\r\n\r\n// 题目数据\r\nconst questions = ref([])\r\nconst currentIndex = ref(0)\r\nconst userAnswers = ref({}) // 用户答案记录 {index: answer}\r\nconst showAnswer = ref(false)\r\nconst historyAnsweredCount = ref(0) // 历史累计已答题数\r\n\r\n// 加载状态\r\nconst loading = ref(false)\r\n\r\n// 弹窗引用\r\nconst statsPopup = ref(null)\r\n\r\n// 当前题目\r\nconst currentQuestion = computed(() => questions.value[currentIndex.value] || null)\r\n\r\n// 用户当前题目的答案\r\nconst userAnswer = computed(() => userAnswers.value[currentIndex.value] || '')\r\n\r\n// 进度百分比\r\nconst progressPercent = computed(() => {\r\n  if (questions.value.length === 0) return 0\r\n  return Math.round((currentIndex.value + 1) / questions.value.length * 100)\r\n})\r\n\r\n// 已答题数\r\nconst answeredCount = computed(() => Object.keys(userAnswers.value).length)\r\n\r\n// 正确数\r\nconst correctCount = computed(() => {\r\n  return Object.keys(userAnswers.value).filter(index => checkAnswer(parseInt(index))).length\r\n})\r\n\r\n// 错误数\r\nconst wrongCount = computed(() => answeredCount.value - correctCount.value)\r\n\r\n// 正确率\r\nconst accuracy = computed(() => {\r\n  if (answeredCount.value === 0) return 0\r\n  return Math.round(correctCount.value / answeredCount.value * 100)\r\n})\r\n\r\n// 当前答案是否正确\r\nconst isAnswerCorrect = computed(() => {\r\n  if (!userAnswer.value) return false\r\n  return userAnswer.value === formatAnswer(currentQuestion.value.answer)\r\n})\r\n\r\n// 页面加载\r\nonMounted(() => {\r\n  // 获取页面参数\r\n  const pages = getCurrentPages()\r\n  const currentPage = pages[pages.length - 1]\r\n  const options = currentPage.options\r\n  \r\n  resultId.value = parseInt(options.resultId) || 0\r\n  bankId.value = parseInt(options.bankId) || 0\r\n  \r\n  if (resultId.value) {\r\n    fetchExamData()\r\n  }\r\n  \r\n  // 监听小程序隐藏事件（用户切换应用或返回桌面）\r\n  uni.onAppHide(() => {\r\n    saveProgress()\r\n  })\r\n})\r\n\r\n// 页面卸载时保存进度\r\nonUnmounted(() => {\r\n  saveProgress()\r\n})\r\n\r\n// 监听题目切换，自动保存进度\r\nwatch(currentIndex, (newIndex, oldIndex) => {\r\n  // 当题目发生变化时保存进度\r\n  if (oldIndex !== undefined && newIndex !== oldIndex) {\r\n    saveProgress()\r\n  }\r\n})\r\n\r\n// 获取考试数据\r\nconst fetchExamData = async () => {\r\n  loading.value = true\r\n  try {\r\n    // 1. 获取题库数据\r\n    const data = await get(`/parse-results/${resultId.value}`)\r\n    \r\n    bankInfo.value = {\r\n      bank_name: data.bank_name,\r\n      file_name: data.file_name\r\n    }\r\n    questions.value = data.questions || []\r\n    \r\n    // 2. 获取学习进度\r\n    try {\r\n      const progressData = await get(`/user-progress/${bankId.value}`)\r\n      \r\n      if (progressData && progressData.current_question_index > 0) {\r\n        // 有学习进度，跳转到上次学习位置\r\n        const lastIndex = progressData.current_question_index\r\n        \r\n        // 保存历史已答题数量\r\n        historyAnsweredCount.value = progressData.completed_count || 0\r\n        \r\n        // 确保索引不超过题目总数\r\n        if (lastIndex < questions.value.length) {\r\n          currentIndex.value = lastIndex\r\n          \r\n          console.log(`📖 继续学习，从第 ${lastIndex + 1} 题开始，历史已答 ${historyAnsweredCount.value} 题`)\r\n        }\r\n      } else {\r\n        console.log('🆕 开始新的学习')\r\n        historyAnsweredCount.value = 0\r\n      }\r\n    } catch (progressError) {\r\n      console.error('获取学习进度失败:', progressError)\r\n      // 进度获取失败，从第一题开始\r\n      currentIndex.value = 0\r\n      historyAnsweredCount.value = 0\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('获取题库失败:', error)\r\n    uni.showToast({\r\n      title: error.message || '加载失败',\r\n      icon: 'none'\r\n    })\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 获取题型标签\r\nconst getTypeLabel = (type) => {\r\n  const typeMap = {\r\n    'single': '单选题',\r\n    'multiple': '多选题',\r\n    'judge': '判断题',\r\n    'fill': '填空题'\r\n  }\r\n  return typeMap[type] || '未知题型'\r\n}\r\n\r\n// 获取选项标签\r\nconst getOptionLabel = (index) => {\r\n  return String.fromCharCode(65 + index) // A, B, C, D...\r\n}\r\n\r\n// 格式化答案\r\nconst formatAnswer = (answer) => {\r\n  if (!answer) return ''\r\n  \r\n  // 如果是多选题，答案可能是 \"AB\" 或 [\"A\", \"B\"]\r\n  if (Array.isArray(answer)) {\r\n    return answer.sort().join('')\r\n  }\r\n  \r\n  // 单选题或判断题\r\n  return answer.toString().toUpperCase()\r\n}\r\n\r\n// 判断选项是否被选中\r\nconst isOptionSelected = (optionIndex) => {\r\n  const answer = userAnswers.value[currentIndex.value]\r\n  if (!answer) return false\r\n  \r\n  const label = getOptionLabel(optionIndex)\r\n  \r\n  if (currentQuestion.value.type === 'multiple') {\r\n    return answer.includes(label)\r\n  }\r\n  \r\n  return answer === label\r\n}\r\n\r\n// 判断选项是否是正确答案\r\nconst isCorrectOption = (optionIndex) => {\r\n  const correctAnswer = formatAnswer(currentQuestion.value.answer)\r\n  const label = getOptionLabel(optionIndex)\r\n  \r\n  if (currentQuestion.value.type === 'multiple') {\r\n    return correctAnswer.includes(label)\r\n  }\r\n  \r\n  return correctAnswer === label\r\n}\r\n\r\n// 选择选项\r\nconst selectOption = (optionIndex) => {\r\n  if (showAnswer.value) return // 已显示答案时不能再选择\r\n  \r\n  const label = getOptionLabel(optionIndex)\r\n  \r\n  if (currentQuestion.value.type === 'multiple') {\r\n    // 多选题\r\n    let currentAnswer = userAnswers.value[currentIndex.value] || ''\r\n    \r\n    if (currentAnswer.includes(label)) {\r\n      // 取消选择\r\n      currentAnswer = currentAnswer.replace(label, '')\r\n    } else {\r\n      // 添加选择\r\n      currentAnswer += label\r\n    }\r\n    \r\n    // 按字母顺序排序\r\n    currentAnswer = currentAnswer.split('').sort().join('')\r\n    \r\n    userAnswers.value[currentIndex.value] = currentAnswer\r\n  } else {\r\n    // 单选题或判断题\r\n    userAnswers.value[currentIndex.value] = label\r\n  }\r\n  \r\n  // 选择后自动显示答案\r\n  setTimeout(() => {\r\n    showAnswer.value = true\r\n  }, 300)\r\n}\r\n\r\n// 切换答案显示\r\nconst toggleAnswer = () => {\r\n  showAnswer.value = !showAnswer.value\r\n}\r\n\r\n// 上一题\r\nconst prevQuestion = () => {\r\n  if (currentIndex.value > 0) {\r\n    currentIndex.value--\r\n    showAnswer.value = false\r\n  }\r\n}\r\n\r\n// 下一题\r\nconst nextQuestion = () => {\r\n  if (currentIndex.value < questions.value.length - 1) {\r\n    currentIndex.value++\r\n    showAnswer.value = false\r\n  }\r\n}\r\n\r\n// 跳转到指定题目\r\nconst jumpToQuestion = (index) => {\r\n  currentIndex.value = index\r\n  showAnswer.value = false\r\n  closeStats()\r\n}\r\n\r\n// 检查答案是否正确\r\nconst checkAnswer = (index) => {\r\n  const userAns = userAnswers.value[index]\r\n  if (!userAns) return false\r\n  \r\n  const question = questions.value[index]\r\n  const correctAns = formatAnswer(question.answer)\r\n  \r\n  return userAns === correctAns\r\n}\r\n\r\n// 显示统计\r\nconst showStats = () => {\r\n  statsPopup.value.open()\r\n}\r\n\r\n// 关闭统计\r\nconst closeStats = () => {\r\n  statsPopup.value.close()\r\n}\r\n\r\n// 保存学习进度\r\nconst saveProgress = async () => {\r\n  if (!bankId.value || questions.value.length === 0) return\r\n  \r\n  try {\r\n    // 计算已完成题目数量：历史已答题数 + 本次新答题数\r\n    // 注意：这里的 answeredCount 是本次会话中答题的数量\r\n    const totalCompleted = historyAnsweredCount.value + answeredCount.value\r\n    \r\n    await post(`/user-progress/${bankId.value}`, {\r\n      parse_result_id: resultId.value,\r\n      current_question_index: currentIndex.value,\r\n      completed_count: totalCompleted, // 累计已答题数\r\n      total_questions: questions.value.length\r\n    }, {\r\n      showLoading: false // 后台保存，不显示加载提示\r\n    })\r\n    \r\n    console.log('💾 学习进度已保存:', {\r\n      current: currentIndex.value + 1,\r\n      historyAnswered: historyAnsweredCount.value,\r\n      sessionAnswered: answeredCount.value,\r\n      totalCompleted: totalCompleted,\r\n      total: questions.value.length,\r\n      progress: progressPercent.value + '%'\r\n    })\r\n  } catch (error) {\r\n    console.error('保存学习进度失败:', error)\r\n    // 保存失败不影响用户操作\r\n  }\r\n}\r\n\r\n// 重置学习进度\r\nconst resetProgress = async () => {\r\n  uni.showModal({\r\n    title: '重新练习',\r\n    content: '确定要清除当前进度，重新开始练习吗？',\r\n    confirmText: '确定',\r\n    cancelText: '取消',\r\n    success: async (res) => {\r\n      if (res.confirm) {\r\n        try {\r\n          uni.showLoading({ title: '重置中...' })\r\n          \r\n          // 调用重置接口\r\n          await del(`/user-progress/${bankId.value}`)\r\n          \r\n          // 重置本地状态\r\n          currentIndex.value = 0\r\n          userAnswers.value = {}\r\n          showAnswer.value = false\r\n          historyAnsweredCount.value = 0 // 重置历史答题数\r\n          \r\n          uni.hideLoading()\r\n          uni.showToast({\r\n            title: '已重新开始',\r\n            icon: 'success'\r\n          })\r\n          \r\n          console.log('🔄 学习进度已重置')\r\n        } catch (error) {\r\n          uni.hideLoading()\r\n          console.error('重置进度失败:', error)\r\n          uni.showToast({\r\n            title: error.message || '重置失败',\r\n            icon: 'none'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 完成考试\r\nconst finishExam = () => {\r\n  // 保存最终进度\r\n  saveProgress()\r\n  \r\n  uni.showModal({\r\n    title: '完成练习',\r\n    content: `已完成 ${answeredCount.value}/${questions.value.length} 题\\n正确率：${accuracy.value}%`,\r\n    confirmText: '查看统计',\r\n    cancelText: '重新练习',\r\n    success: (res) => {\r\n      if (res.confirm) {\r\n        showStats()\r\n      } else {\r\n        // 用户点击\"重新练习\"\r\n        resetProgress()\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 返回\r\nconst handleBack = () => {\r\n  uni.showModal({\r\n    title: '确认退出',\r\n    content: '学习进度已自动保存，确定要退出吗？',\r\n    success: async (res) => {\r\n      if (res.confirm) {\r\n        // 退出前保存一次进度\r\n        await saveProgress()\r\n        uni.navigateBack()\r\n      }\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.exam-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(180deg, #f5f7fa 0%, #ffffff 100%);\r\n  padding-bottom: 40rpx;\r\n}\r\n\r\n/* 顶部进度栏 */\r\n.exam-header {\r\n  background: white;\r\n  padding: 20rpx;\r\n  box-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.05);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n}\r\n\r\n.header-info {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 16rpx;\r\n}\r\n\r\n.back-btn, .stats-btn {\r\n  width: 60rpx;\r\n  height: 60rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f7fa;\r\n  border-radius: 50%;\r\n}\r\n\r\n.exam-title {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 4rpx;\r\n}\r\n\r\n.title-text {\r\n  font-size: 30rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.subtitle-text {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n}\r\n\r\n.progress-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16rpx;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 8rpx;\r\n  background: #f0f0f0;\r\n  border-radius: 4rpx;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.progress-text {\r\n  font-size: 24rpx;\r\n  color: #667eea;\r\n  font-weight: 600;\r\n  min-width: 60rpx;\r\n  text-align: right;\r\n}\r\n\r\n/* 加载状态 */\r\n.loading-state {\r\n  padding: 200rpx 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 24rpx;\r\n}\r\n\r\n.loading-icon {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.loading-text {\r\n  font-size: 28rpx;\r\n  color: #999;\r\n}\r\n\r\n/* 题目内容 */\r\n.question-content {\r\n  padding: 20rpx;\r\n}\r\n\r\n/* 题目卡片 */\r\n.question-card {\r\n  background: white;\r\n  border-radius: 20rpx;\r\n  padding: 32rpx;\r\n  margin-bottom: 24rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.06);\r\n}\r\n\r\n.question-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.question-type {\r\n  padding: 8rpx 20rpx;\r\n  border-radius: 20rpx;\r\n  background: #e3f2fd;\r\n}\r\n\r\n.type-single {\r\n  background: #e3f2fd;\r\n}\r\n\r\n.type-multiple {\r\n  background: #fff3e0;\r\n}\r\n\r\n.type-judge {\r\n  background: #e8f5e9;\r\n}\r\n\r\n.type-fill {\r\n  background: #fce4ec;\r\n}\r\n\r\n.type-text {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n}\r\n\r\n.question-difficulty {\r\n  display: flex;\r\n  gap: 4rpx;\r\n}\r\n\r\n.question-number {\r\n  margin-bottom: 16rpx;\r\n}\r\n\r\n.question-number text {\r\n  font-size: 26rpx;\r\n  color: #999;\r\n}\r\n\r\n.question-text {\r\n  font-size: 32rpx;\r\n  line-height: 1.8;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.question-tags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 12rpx;\r\n}\r\n\r\n.tag {\r\n  padding: 6rpx 16rpx;\r\n  background: #f5f7fa;\r\n  border-radius: 8rpx;\r\n}\r\n\r\n.tag-text {\r\n  font-size: 22rpx;\r\n  color: #666;\r\n}\r\n\r\n/* 选项列表 */\r\n.options-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16rpx;\r\n  margin-bottom: 24rpx;\r\n}\r\n\r\n.option-item {\r\n  background: white;\r\n  border: 2rpx solid #e0e0e0;\r\n  border-radius: 16rpx;\r\n  padding: 24rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20rpx;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.option-item.selected {\r\n  border-color: #667eea;\r\n  background: #f5f7ff;\r\n}\r\n\r\n.option-item.correct {\r\n  border-color: #28a745;\r\n  background: #f1f9f3;\r\n}\r\n\r\n.option-item.wrong {\r\n  border-color: #dc3545;\r\n  background: #fff5f5;\r\n}\r\n\r\n.option-item.disabled {\r\n  pointer-events: none;\r\n}\r\n\r\n.option-label {\r\n  width: 56rpx;\r\n  height: 56rpx;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.option-item.correct .option-label {\r\n  background: linear-gradient(135deg, #28a745 0%, #20c997 100%);\r\n}\r\n\r\n.option-item.wrong .option-label {\r\n  background: linear-gradient(135deg, #dc3545 0%, #e83e8c 100%);\r\n}\r\n\r\n.label-text {\r\n  font-size: 28rpx;\r\n  font-weight: 600;\r\n  color: white;\r\n}\r\n\r\n.option-content {\r\n  flex: 1;\r\n}\r\n\r\n.option-text {\r\n  font-size: 28rpx;\r\n  line-height: 1.6;\r\n  color: #333;\r\n}\r\n\r\n.option-icon {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.selected-dot {\r\n  width: 16rpx;\r\n  height: 16rpx;\r\n  background: #667eea;\r\n  border-radius: 50%;\r\n}\r\n\r\n/* 答案解析 */\r\n.answer-section {\r\n  background: white;\r\n  border-radius: 20rpx;\r\n  padding: 32rpx;\r\n  margin-bottom: 24rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.06);\r\n}\r\n\r\n.answer-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12rpx;\r\n  margin-bottom: 24rpx;\r\n  padding-bottom: 20rpx;\r\n  border-bottom: 1rpx solid #f0f0f0;\r\n}\r\n\r\n.answer-title {\r\n  font-size: 30rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.answer-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20rpx;\r\n}\r\n\r\n.answer-row {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.answer-label {\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  min-width: 160rpx;\r\n}\r\n\r\n.answer-value {\r\n  font-size: 28rpx;\r\n  font-weight: 600;\r\n}\r\n\r\n.answer-value.correct {\r\n  color: #28a745;\r\n}\r\n\r\n.answer-value.wrong {\r\n  color: #dc3545;\r\n}\r\n\r\n.explanation {\r\n  background: #f5f7fa;\r\n  padding: 24rpx;\r\n  border-radius: 12rpx;\r\n  margin-top: 8rpx;\r\n}\r\n\r\n.explanation-label {\r\n  font-size: 28rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n  display: block;\r\n  margin-bottom: 12rpx;\r\n}\r\n\r\n.explanation-text {\r\n  font-size: 26rpx;\r\n  line-height: 1.8;\r\n  color: #666;\r\n}\r\n\r\n/* 操作按钮 */\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 16rpx;\r\n  padding: 0 20rpx;\r\n}\r\n\r\n.action-btn {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8rpx;\r\n  padding: 28rpx;\r\n  border-radius: 16rpx;\r\n  font-size: 28rpx;\r\n  border: none;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.action-btn.secondary {\r\n  background: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.action-btn.secondary:disabled {\r\n  background: #e0e0e0;\r\n  color: #999;\r\n}\r\n\r\n.action-btn.primary {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n}\r\n\r\n.action-btn.finish {\r\n  background: linear-gradient(135deg, #28a745 0%, #20c997 100%);\r\n  color: white;\r\n}\r\n\r\n/* 统计弹窗 */\r\n.stats-popup {\r\n  width: 640rpx;\r\n  background: white;\r\n  border-radius: 24rpx;\r\n  padding: 32rpx;\r\n}\r\n\r\n.popup-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 32rpx;\r\n}\r\n\r\n.popup-title {\r\n  font-size: 32rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.close-btn {\r\n  width: 48rpx;\r\n  height: 48rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.stats-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 32rpx;\r\n}\r\n\r\n.stat-row {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 8rpx;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 48rpx;\r\n  font-weight: bold;\r\n}\r\n\r\n.stat-number.primary {\r\n  color: #667eea;\r\n}\r\n\r\n.stat-number.success {\r\n  color: #28a745;\r\n}\r\n\r\n.stat-number.danger {\r\n  color: #dc3545;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n}\r\n\r\n.accuracy-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 24rpx;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 16rpx;\r\n}\r\n\r\n.accuracy-label {\r\n  font-size: 28rpx;\r\n  color: white;\r\n}\r\n\r\n.accuracy-value {\r\n  font-size: 40rpx;\r\n  font-weight: bold;\r\n  color: white;\r\n}\r\n\r\n.question-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(8, 1fr);\r\n  gap: 16rpx;\r\n}\r\n\r\n.grid-item {\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f7fa;\r\n  border-radius: 8rpx;\r\n  border: 2rpx solid transparent;\r\n}\r\n\r\n.grid-item.current {\r\n  border-color: #667eea;\r\n  background: #e3f2fd;\r\n}\r\n\r\n.grid-item.answered {\r\n  background: #e0e0e0;\r\n}\r\n\r\n.grid-item.correct {\r\n  background: #d4edda;\r\n  color: #28a745;\r\n}\r\n\r\n.grid-item.wrong {\r\n  background: #f8d7da;\r\n  color: #dc3545;\r\n}\r\n\r\n.grid-number {\r\n  font-size: 24rpx;\r\n  font-weight: 600;\r\n}\r\n\r\n.popup-buttons {\r\n  display: flex;\r\n  gap: 16rpx;\r\n  margin-top: 16rpx;\r\n}\r\n\r\n.popup-btn {\r\n  flex: 1;\r\n  border: none;\r\n  padding: 28rpx;\r\n  border-radius: 16rpx;\r\n  font-size: 30rpx;\r\n  font-weight: 600;\r\n}\r\n\r\n.popup-btn.primary {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n}\r\n\r\n.popup-btn.secondary {\r\n  background: #f5f7fa;\r\n  color: #333;\r\n}\r\n</style>\r\n\r\n","import MiniProgramPage from 'E:/personal/wx/uni-ui/pages/exam/exam.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","computed","onMounted","uni","onUnmounted","watch","get","post","del"],"mappings":"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"}
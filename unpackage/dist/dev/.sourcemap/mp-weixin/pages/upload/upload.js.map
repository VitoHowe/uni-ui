{"version":3,"file":"upload.js","sources":["pages/upload/upload.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdXBsb2FkL3VwbG9hZC52dWU"],"sourcesContent":["<template>\r\n  <view class=\"upload-container\">\r\n    <!-- 认证保护：未登录时显示登录引导 -->\r\n    <AuthGuard \r\n      v-if=\"!authStore.isAuthenticated\"\r\n      title=\"文件上传\"\r\n      message=\"登录后可上传PDF文件，系统将自动解析题库和知识点内容\"\r\n      :show-preview=\"true\"\r\n      current-path=\"/pages/upload/upload\"\r\n    >\r\n      <template #preview>\r\n        <view class=\"preview-item\">\r\n          <uni-icons type=\"checkmarkempty\" size=\"16\" color=\"#28a745\" />\r\n          <text>PDF文件智能解析</text>\r\n        </view>\r\n        <view class=\"preview-item\">\r\n          <uni-icons type=\"checkmarkempty\" size=\"16\" color=\"#28a745\" />\r\n          <text>题库批量导入</text>\r\n        </view>\r\n        <view class=\"preview-item\">\r\n          <uni-icons type=\"checkmarkempty\" size=\"16\" color=\"#28a745\" />\r\n          <text>上传历史管理</text>\r\n        </view>\r\n      </template>\r\n    </AuthGuard>\r\n\r\n    <!-- 已登录内容 -->\r\n    <template v-else>\r\n    <!-- 页面标题和描述 -->\r\n    <view class=\"page-header\">\r\n      <view class=\"header-content\">\r\n        <text class=\"header-title\">文件上传</text>\r\n        <text class=\"header-desc\">支持知识点和题库文件的上传与解析</text>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 文件类型选择 -->\r\n    <view class=\"file-type-section\">\r\n      <uni-section title=\"选择文件类型\" type=\"line\" padding>\r\n        <view class=\"type-selector\">\r\n          <uni-segmented-control \r\n            :values=\"fileTypeOptions\" \r\n            :current=\"currentFileType\" \r\n            @clickItem=\"onTypeChange\"\r\n            styleType=\"text\"\r\n            activeColor=\"#007AFF\"\r\n          />\r\n        </view>\r\n        <view class=\"type-description\">\r\n          <text class=\"desc-text\">{{ getTypeDescription() }}</text>\r\n        </view>\r\n      </uni-section>\r\n    </view>\r\n\r\n    <!-- 文件上传区域 -->\r\n    <view class=\"upload-section\">\r\n      <uni-section title=\"选择文件\" type=\"line\" padding>\r\n        <view class=\"upload-area\">\r\n          <uni-file-picker\r\n            ref=\"filePickerRef\"\r\n            v-model=\"filesList\"\r\n            :file-mediatype=\"fileMediaType\"\r\n            :file-extname=\"allowedExtensions\"\r\n            :limit=\"maxFileCount\"\r\n            :auto-upload=\"false\"\r\n            mode=\"list\"\r\n            :title=\"`已选择文件 (${filesList.length}/${maxFileCount})`\"\r\n            @select=\"onFileSelect\"\r\n            @progress=\"onUploadProgress\"\r\n            @success=\"onUploadSuccess\"\r\n            @fail=\"onUploadFail\"\r\n          >\r\n            <view class=\"upload-trigger\">\r\n              <view class=\"upload-icon\">\r\n                <uni-icons type=\"cloud-upload\" size=\"32\" color=\"#007AFF\" />\r\n              </view>\r\n              <text class=\"upload-text\">点击选择{{ getFileTypeText() }}文件</text>\r\n              <text class=\"upload-hint\">支持 {{ allowedExtensions.join(', ') }} 格式</text>\r\n            </view>\r\n          </uni-file-picker>\r\n        </view>\r\n      </uni-section>\r\n    </view>\r\n\r\n    <!-- 上传操作区域 -->\r\n    <view class=\"action-section\" v-if=\"filesList.length > 0\">\r\n      <view class=\"action-buttons\">\r\n        <button \r\n          class=\"btn-upload\" \r\n          :disabled=\"uploading\"\r\n          @click=\"handleStartUpload\"\r\n        >\r\n          <uni-icons v-if=\"uploading\" type=\"spinner-cycle\" size=\"16\" color=\"#fff\" />\r\n          {{ uploading ? '上传中...' : '开始上传' }}\r\n        </button>\r\n        <button \r\n          class=\"btn-clear\" \r\n          :disabled=\"uploading\"\r\n          @click=\"clearFiles\"\r\n        >\r\n          清空文件\r\n        </button>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 上传进度显示 -->\r\n    <view class=\"progress-section\" v-if=\"uploadProgress.show\">\r\n      <uni-section title=\"上传进度\" type=\"line\" padding>\r\n        <view class=\"progress-content\">\r\n          <view class=\"progress-info\">\r\n            <text class=\"progress-text\">\r\n              正在上传{{ getFileTypeText() }}文件... ({{ uploadProgress.current }}/{{ uploadProgress.total }})\r\n            </text>\r\n          </view>\r\n          <uni-progress \r\n            :percent=\"uploadProgress.percent\" \r\n            :show-info=\"true\"\r\n            color=\"#007AFF\"\r\n            stroke-width=\"8\"\r\n          />\r\n        </view>\r\n      </uni-section>\r\n    </view>\r\n\r\n    <!-- 上传历史记录 -->\r\n    <view class=\"history-section\">\r\n      <uni-section title=\"上传记录\" type=\"line\" padding>\r\n        <uni-list v-if=\"uploadHistory.length > 0\">\r\n          <uni-list-item\r\n            v-for=\"(record, index) in uploadHistory\"\r\n            :key=\"index\"\r\n            :title=\"record.fileName\"\r\n            :note=\"`${record.fileType} | ${record.uploadTime}`\"\r\n            :rightText=\"record.status\"\r\n            clickable\r\n            @click=\"viewUploadDetail(record)\"\r\n          >\r\n            <template v-slot:header>\r\n              <view class=\"history-icon\" :class=\"`status-${getStatusClass(record.status)}`\">\r\n                <uni-icons \r\n                  :type=\"getStatusIcon(record.status)\" \r\n                  size=\"18\" \r\n                  :color=\"getStatusColor(record.status)\" \r\n                />\r\n              </view>\r\n            </template>\r\n          </uni-list-item>\r\n        </uni-list>\r\n        <view v-else class=\"empty-history\">\r\n          <uni-icons type=\"inbox\" size=\"48\" color=\"#ccc\" />\r\n          <text class=\"empty-text\">暂无上传记录</text>\r\n        </view>\r\n      </uni-section>\r\n    </view>\r\n\r\n    <!-- 自定义底部导航栏 -->\r\n    <CustomTabBar :current=\"4\" @change=\"onTabChange\" />\r\n    </template>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, onMounted } from 'vue'\r\nimport { useUploadStore } from '@/stores/upload'\r\nimport { useAuthStore } from '@/stores/auth.js'\r\nimport { PermissionChecker, RouteGuard } from '@/utils/auth.js'\r\nimport CustomTabBar from \"@/components/CustomTabBar.vue\"\r\nimport AuthGuard from \"@/components/AuthGuard.vue\"\r\n\r\n// 使用状态管理\r\nconst uploadStore = useUploadStore()\r\nconst authStore = useAuthStore()\r\n\r\n// 文件相关配置\r\nconst fileMediaType = 'all'\r\n\r\n// 计算属性\r\nconst fileTypeOptions = computed(() => uploadStore.config.fileTypeOptions)\r\nconst currentFileType = computed(() => uploadStore.currentFileType)\r\nconst maxFileCount = computed(() => uploadStore.config.maxFileCount)\r\nconst filesList = computed(() => uploadStore.filesList)\r\nconst uploading = computed(() => uploadStore.uploadStatus.uploading)\r\nconst uploadProgress = computed(() => uploadStore.uploadStatus.progress)\r\nconst uploadHistory = computed(() => uploadStore.uploadHistory)\r\nconst allowedExtensions = computed(() => uploadStore.currentAllowedExtensions)\r\n\r\n// 获取文件类型描述\r\nconst getTypeDescription = () => {\r\n  return uploadStore.currentTypeDescription\r\n}\r\n\r\n// 获取文件类型文本\r\nconst getFileTypeText = () => {\r\n  return uploadStore.currentFileTypeText\r\n}\r\n\r\n// 文件类型切换\r\nconst onTypeChange = (e) => {\r\n  // 切换类型时检查是否有已选文件\r\n  if (filesList.value.length > 0) {\r\n    uni.showModal({\r\n      title: '切换文件类型',\r\n      content: '切换文件类型将清空当前已选文件，是否继续？',\r\n      success: (res) => {\r\n        if (res.confirm) {\r\n          uploadStore.setFileType(e.currentIndex)\r\n        }\r\n        // 如果取消，不做任何操作，segmented-control会自动恢复\r\n      }\r\n    })\r\n  } else {\r\n    uploadStore.setFileType(e.currentIndex)\r\n  }\r\n}\r\n\r\n// 文件选择回调\r\nconst onFileSelect = (e) => {\r\n  console.log('选择文件:', e)\r\n  const success = uploadStore.addFiles(e.tempFiles)\r\n  if (success) {\r\n    uni.showToast({\r\n      title: `已选择 ${e.tempFiles.length} 个文件`,\r\n      icon: 'success'\r\n    })\r\n  }\r\n}\r\n\r\n// 上传进度回调\r\nconst onUploadProgress = (e) => {\r\n  console.log('上传进度:', e)\r\n  // 这里可以处理单个文件的上传进度\r\n}\r\n\r\n// 上传成功回调\r\nconst onUploadSuccess = (e) => {\r\n  console.log('上传成功:', e)\r\n  // 在实际项目中，这个回调会由uni-file-picker触发\r\n  // 当前使用store中的方法来处理上传逻辑\r\n}\r\n\r\n// 上传失败回调\r\nconst onUploadFail = (e) => {\r\n  console.log('上传失败:', e)\r\n  // 在实际项目中，这个回调会由uni-file-picker触发\r\n  // 当前使用store中的方法来处理上传逻辑\r\n}\r\n\r\n// 开始上传\r\nconst startUpload = () => {\r\n  uploadStore.startUpload()\r\n}\r\n\r\n// 清空文件\r\nconst clearFiles = () => {\r\n  if (filesList.value.length === 0) return\r\n  \r\n  uni.showModal({\r\n    title: '确认清空',\r\n    content: '确定要清空所有已选文件吗？',\r\n    success: (res) => {\r\n      if (res.confirm) {\r\n        uploadStore.clearFiles()\r\n        uni.showToast({\r\n          title: '已清空文件列表',\r\n          icon: 'success'\r\n        })\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 查看上传详情\r\nconst viewUploadDetail = (record) => {\r\n  uni.showModal({\r\n    title: record.fileName,\r\n    content: `文件类型：${record.fileType}\\n上传时间：${record.uploadTime}\\n文件大小：${record.fileSize}\\n状态：${record.status}${record.errorMessage ? '\\n错误信息：' + record.errorMessage : ''}${record.recordCount ? '\\n解析记录数：' + record.recordCount : ''}`,\r\n    confirmText: '确定'\r\n  })\r\n}\r\n\r\n// 获取状态图标\r\nconst getStatusIcon = (status) => {\r\n  return uploadStore.getStatusIcon(status)\r\n}\r\n\r\n// 获取状态颜色  \r\nconst getStatusColor = (status) => {\r\n  return uploadStore.getStatusColor(status)\r\n}\r\n\r\n// 获取状态CSS类名（中文状态转英文类名）\r\nconst getStatusClass = (status) => {\r\n  const statusMap = {\r\n    '成功': 'success',\r\n    '失败': 'failed', \r\n    '处理中': 'processing'\r\n  }\r\n  return statusMap[status] || 'unknown'\r\n}\r\n\r\n// 检查上传权限\r\nconst checkUploadPermission = () => {\r\n  const permissionResult = PermissionChecker.checkFeatureAvailable('file_upload')\r\n  \r\n  if (!permissionResult.available) {\r\n    uni.showModal({\r\n      title: '需要登录',\r\n      content: permissionResult.message,\r\n      confirmText: '立即登录',\r\n      cancelText: '稍后再说',\r\n      success: (res) => {\r\n        if (res.confirm) {\r\n          // 保存当前路径\r\n          RouteGuard.saveReturnPath('/pages/upload/upload')\r\n          // 跳转到登录页\r\n          uni.navigateTo({\r\n            url: '/pages/login/login'\r\n          })\r\n        }\r\n      }\r\n    })\r\n    return false\r\n  }\r\n  \r\n  return true\r\n}\r\n\r\n// 重写开始上传函数，添加权限检查\r\nconst handleStartUpload = async () => {\r\n  if (!checkUploadPermission()) {\r\n    return\r\n  }\r\n  \r\n  try {\r\n    await uploadStore.startUpload()\r\n  } catch (error) {\r\n    console.error('上传失败:', error)\r\n    uni.showToast({\r\n      title: error.message || '上传失败',\r\n      icon: 'error'\r\n    })\r\n  }\r\n}\r\n\r\n// 底部导航切换\r\nconst onTabChange = (index) => {\r\n  console.log('切换到tab:', index)\r\n}\r\n\r\n// 页面初始化时检查登录状态\r\nonMounted(() => {\r\n  console.log('文件上传页面加载')\r\n  \r\n  // 如果未登录，显示登录提示\r\n  if (!authStore.isAuthenticated) {\r\n    uni.showToast({\r\n      title: '建议登录后使用完整上传功能',\r\n      icon: 'none',\r\n      duration: 3000\r\n    })\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.upload-container {\r\n  padding: 0 0 40rpx 0;\r\n  background-color: #f8f9fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.page-header {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  padding: 40rpx;\r\n  color: white;\r\n}\r\n\r\n.header-content {\r\n  text-align: center;\r\n}\r\n\r\n.header-title {\r\n  display: block;\r\n  font-size: 36rpx;\r\n  font-weight: 600;\r\n  margin-bottom: 15rpx;\r\n}\r\n\r\n.header-desc {\r\n  font-size: 26rpx;\r\n  opacity: 0.9;\r\n  line-height: 1.4;\r\n}\r\n\r\n.file-type-section,\r\n.upload-section,\r\n.action-section,\r\n.progress-section,\r\n.history-section {\r\n  margin: 20rpx;\r\n}\r\n\r\n.type-selector {\r\n  padding: 20rpx 0;\r\n}\r\n\r\n.type-description {\r\n  margin-top: 20rpx;\r\n  padding: 20rpx;\r\n  background: #f0f7ff;\r\n  border-radius: 12rpx;\r\n  border-left: 4rpx solid #007AFF;\r\n}\r\n\r\n.desc-text {\r\n  font-size: 26rpx;\r\n  color: #666;\r\n  line-height: 1.5;\r\n}\r\n\r\n.upload-area {\r\n  background: white;\r\n  border-radius: 16rpx;\r\n  overflow: hidden;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.upload-trigger {\r\n  padding: 60rpx 40rpx;\r\n  text-align: center;\r\n  border: 2rpx dashed #e0e0e0;\r\n  border-radius: 12rpx;\r\n  margin: 20rpx;\r\n  background: #fafafa;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.upload-trigger:active {\r\n  background: #f0f7ff;\r\n  border-color: #007AFF;\r\n}\r\n\r\n.upload-icon {\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.upload-text {\r\n  display: block;\r\n  font-size: 30rpx;\r\n  color: #333;\r\n  margin-bottom: 10rpx;\r\n  font-weight: 500;\r\n}\r\n\r\n.upload-hint {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 20rpx;\r\n  padding: 20rpx 0;\r\n}\r\n\r\n.btn-upload,\r\n.btn-clear {\r\n  flex: 1;\r\n  height: 88rpx;\r\n  border-radius: 16rpx;\r\n  font-size: 30rpx;\r\n  font-weight: 600;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10rpx;\r\n}\r\n\r\n.btn-upload {\r\n  background-color: #007AFF;\r\n  color: white;\r\n}\r\n\r\n.btn-upload:disabled {\r\n  background-color: #ccc;\r\n  opacity: 0.6;\r\n}\r\n\r\n.btn-clear {\r\n  background-color: #f8f9fa;\r\n  color: #666;\r\n  border: 1rpx solid #e0e0e0;\r\n}\r\n\r\n.btn-clear:disabled {\r\n  opacity: 0.6;\r\n}\r\n\r\n.progress-content {\r\n  background: white;\r\n  padding: 30rpx;\r\n  border-radius: 16rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.progress-info {\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.progress-text {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n}\r\n\r\n.history-section {\r\n  background: white;\r\n  border-radius: 16rpx;\r\n  overflow: hidden;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.history-icon {\r\n  width: 60rpx;\r\n  height: 60rpx;\r\n  border-radius: 12rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20rpx;\r\n}\r\n\r\n.status-success {\r\n  background-color: #f0f9ff;\r\n}\r\n\r\n.status-failed {\r\n  background-color: #fff5f5;\r\n}\r\n\r\n.status-processing {\r\n  background-color: #f0f7ff;\r\n}\r\n\r\n.status-unknown {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.empty-history {\r\n  padding: 80rpx;\r\n  text-align: center;\r\n}\r\n\r\n.empty-text {\r\n  display: block;\r\n  margin-top: 20rpx;\r\n  font-size: 28rpx;\r\n  color: #999;\r\n}\r\n\r\n// AuthGuard预览项目样式\r\n.preview-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15rpx 0;\r\n  font-size: 26rpx;\r\n  color: #666;\r\n  \r\n  uni-icons {\r\n    margin-right: 15rpx;\r\n  }\r\n}\r\n</style>\r\n","import MiniProgramPage from 'E:/开源项目/uni-ui/pages/upload/upload.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUploadStore","useAuthStore","computed","uni","PermissionChecker","RouteGuard","onMounted"],"mappings":"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"}